#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mod_Spline

#include "Basic.hpp"

#include "Mod_Spline_classes.hpp"
#include "Mod_Spline_parameters.hpp"


namespace SDK
{

// Function Mod_Spline.Mod_Spline_C.BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FString                           PropertyName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AMod_Spline_C::BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature(const class FString& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature");

	Params::Mod_Spline_C_BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature Parms{};

	Parms.PropertyName = std::move(PropertyName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mod_Spline.Mod_Spline_C.ClearAllPoints
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMod_Spline_C::ClearAllPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "ClearAllPoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mod_Spline.Mod_Spline_C.ClearAllSplineMeshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMod_Spline_C::ClearAllSplineMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "ClearAllSplineMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mod_Spline.Mod_Spline_C.DrawDebugSpline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMod_Spline_C::DrawDebugSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "DrawDebugSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mod_Spline.Mod_Spline_C.DrawMeshAfterDelay
// (BlueprintCallable, BlueprintEvent)

void AMod_Spline_C::DrawMeshAfterDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "DrawMeshAfterDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mod_Spline.Mod_Spline_C.DrawSpline
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMod_Spline_C::DrawSpline(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "DrawSpline");

	Params::Mod_Spline_C_DrawSpline Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mod_Spline.Mod_Spline_C.DrawSplineMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      NewMesh                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ESplineMeshAxis                         InForwardAxis                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMod_Spline_C::DrawSplineMesh(class UStaticMesh* NewMesh, ESplineMeshAxis InForwardAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "DrawSplineMesh");

	Params::Mod_Spline_C_DrawSplineMesh Parms{};

	Parms.NewMesh = NewMesh;
	Parms.InForwardAxis = InForwardAxis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mod_Spline.Mod_Spline_C.ExecuteUbergraph_Mod_Spline
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMod_Spline_C::ExecuteUbergraph_Mod_Spline(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "ExecuteUbergraph_Mod_Spline");

	Params::Mod_Spline_C_ExecuteUbergraph_Mod_Spline Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mod_Spline.Mod_Spline_C.OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AMod_Spline_C::OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85");

	Params::Mod_Spline_C_OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mod_Spline.Mod_Spline_C.OnPointRemove
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMod_Spline_C::OnPointRemove(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "OnPointRemove");

	Params::Mod_Spline_C_OnPointRemove Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mod_Spline.Mod_Spline_C.OnSplineDrawn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AMod_Spline_C::OnSplineDrawn__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "OnSplineDrawn__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mod_Spline.Mod_Spline_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMod_Spline_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mod_Spline.Mod_Spline_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void AMod_Spline_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mod_Spline.Mod_Spline_C.UpdateLinearity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMod_Spline_C::UpdateLinearity(bool Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mod_Spline_C", "UpdateLinearity");

	Params::Mod_Spline_C_UpdateLinearity Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

