#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IGLE_A_Gizmo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "IGLE_E_GizmoMode_structs.hpp"
#include "IGLE_E_GizmoSpace_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass IGLE_A_Gizmo.IGLE_A_Gizmo_C
// 0x03C8 (0x0660 - 0x0298)
class AIGLE_A_Gizmo_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   ActiveGizmo;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AIGLE_Pawn_EditorBase_C*                Parent;                                            // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EIGLE_E_GizmoMode                             Mode;                                              // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIGLE_E_GizmoSpace                            Space;                                             // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectTypeQuery                              GizmoObjectType;                                   // 0x02BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxGizmoScanDistance;                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsingGizmo;                                      // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CurrentGizmoHit;                                   // 0x02D0(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          IsHoveringGizmo;                                   // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OnHoverDesaturation;                               // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PreUseTransform;                                   // 0x03D0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             LastGizmoHit;                                      // 0x0430(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CanScanForGizmo;                                   // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LastFrameTransform;                                // 0x0520(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TranslationSnap;                                   // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotationAngleSnap;                                 // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleSnap;                                         // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableTranslationSnap;                             // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableRotationSnap;                                // 0x0599(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableScaleSnap;                                   // 0x059A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasUsingGizmo;                                     // 0x059B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScaleGizmoToView;                                  // 0x059C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GizmoScreenSpaceSize;                              // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDepthForAutoScale;                              // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AActor*, struct FTransform>        PreUseSelectionTransforms;                         // 0x05B0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class AActor*, struct FTransform>        PostUseSelectionTransforms;                        // 0x0600(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          TemporarySnapEnabled;                              // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_IGLE_A_Gizmo(int32 EntryPoint);
	void ForceInverseGizmoScale(class USceneComponent* Component, const struct FVector& InitialRelativeScale);
	void GenerateGizmo(class AIGLE_A_Gizmo_C* GizmoOuter);
	void GetGizmoSnappingSettings(double* TranslationSnap_0, double* RotationAngleSnap_0, double* ScaleSnap_0);
	void GetOrderedValuesForActorTransformKeys(TArray<class AActor*>& Actors, const TMap<class AActor*, struct FTransform>& InMap, TArray<struct FTransform>* OutTransforms);
	void OnActorDeselected_Event(class AActor* Actor, bool CreateUndoAction);
	void OnUseGizmoUsageChanged();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ScanForGizmo(struct FHitResult* HitResult, bool* HitMyself);
	void SetGizmoMode(EIGLE_E_GizmoMode Mode_0, bool Create_Undo_Action);
	void SetGizmoSpace(EIGLE_E_GizmoSpace New_Space, const bool Create_Undo_Action);
	void SetStencilValueForGizmo(bool Render_Custom_Depth, int32 Stencil_Value);
	void ShouldSnapForMode(EIGLE_E_GizmoMode Mode_0, bool* ShouldSnap);
	void Tick_ScaleGizmoToView();
	void TickGizmo();
	void UpdateEditorGizmo(EIGLE_E_GizmoMode Gizmo);
	void UpdateGizmoSpace(EIGLE_E_GizmoSpace New_Gizmo_Space);
	void ViewSpaceScanLine(struct FVector* Start, struct FVector* End);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IGLE_A_Gizmo_C">();
	}
	static class AIGLE_A_Gizmo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIGLE_A_Gizmo_C>();
	}
};
static_assert(alignof(AIGLE_A_Gizmo_C) == 0x000010, "Wrong alignment on AIGLE_A_Gizmo_C");
static_assert(sizeof(AIGLE_A_Gizmo_C) == 0x000660, "Wrong size on AIGLE_A_Gizmo_C");
static_assert(offsetof(AIGLE_A_Gizmo_C, UberGraphFrame) == 0x000298, "Member 'AIGLE_A_Gizmo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, ActiveGizmo) == 0x0002A0, "Member 'AIGLE_A_Gizmo_C::ActiveGizmo' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, DefaultSceneRoot) == 0x0002A8, "Member 'AIGLE_A_Gizmo_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, Parent) == 0x0002B0, "Member 'AIGLE_A_Gizmo_C::Parent' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, Mode) == 0x0002B8, "Member 'AIGLE_A_Gizmo_C::Mode' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, Space) == 0x0002B9, "Member 'AIGLE_A_Gizmo_C::Space' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, GizmoObjectType) == 0x0002BA, "Member 'AIGLE_A_Gizmo_C::GizmoObjectType' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, MaxGizmoScanDistance) == 0x0002C0, "Member 'AIGLE_A_Gizmo_C::MaxGizmoScanDistance' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, IsUsingGizmo) == 0x0002C8, "Member 'AIGLE_A_Gizmo_C::IsUsingGizmo' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, CurrentGizmoHit) == 0x0002D0, "Member 'AIGLE_A_Gizmo_C::CurrentGizmoHit' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, IsHoveringGizmo) == 0x0003B8, "Member 'AIGLE_A_Gizmo_C::IsHoveringGizmo' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, OnHoverDesaturation) == 0x0003C0, "Member 'AIGLE_A_Gizmo_C::OnHoverDesaturation' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, PreUseTransform) == 0x0003D0, "Member 'AIGLE_A_Gizmo_C::PreUseTransform' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, LastGizmoHit) == 0x000430, "Member 'AIGLE_A_Gizmo_C::LastGizmoHit' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, CanScanForGizmo) == 0x000518, "Member 'AIGLE_A_Gizmo_C::CanScanForGizmo' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, LastFrameTransform) == 0x000520, "Member 'AIGLE_A_Gizmo_C::LastFrameTransform' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, TranslationSnap) == 0x000580, "Member 'AIGLE_A_Gizmo_C::TranslationSnap' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, RotationAngleSnap) == 0x000588, "Member 'AIGLE_A_Gizmo_C::RotationAngleSnap' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, ScaleSnap) == 0x000590, "Member 'AIGLE_A_Gizmo_C::ScaleSnap' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, EnableTranslationSnap) == 0x000598, "Member 'AIGLE_A_Gizmo_C::EnableTranslationSnap' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, EnableRotationSnap) == 0x000599, "Member 'AIGLE_A_Gizmo_C::EnableRotationSnap' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, EnableScaleSnap) == 0x00059A, "Member 'AIGLE_A_Gizmo_C::EnableScaleSnap' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, WasUsingGizmo) == 0x00059B, "Member 'AIGLE_A_Gizmo_C::WasUsingGizmo' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, ScaleGizmoToView) == 0x00059C, "Member 'AIGLE_A_Gizmo_C::ScaleGizmoToView' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, GizmoScreenSpaceSize) == 0x0005A0, "Member 'AIGLE_A_Gizmo_C::GizmoScreenSpaceSize' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, MinDepthForAutoScale) == 0x0005A8, "Member 'AIGLE_A_Gizmo_C::MinDepthForAutoScale' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, PreUseSelectionTransforms) == 0x0005B0, "Member 'AIGLE_A_Gizmo_C::PreUseSelectionTransforms' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, PostUseSelectionTransforms) == 0x000600, "Member 'AIGLE_A_Gizmo_C::PostUseSelectionTransforms' has a wrong offset!");
static_assert(offsetof(AIGLE_A_Gizmo_C, TemporarySnapEnabled) == 0x000650, "Member 'AIGLE_A_Gizmo_C::TemporarySnapEnabled' has a wrong offset!");

}

