#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IGLE_SplinePointPropertyValueObject

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function IGLE_SplinePointPropertyValueObject.IGLE_SplinePointPropertyValueObject_C.Add Point
// 0x0130 (0x0130 - 0x0000)
struct IGLE_SplinePointPropertyValueObject_C_Add_Point final
{
public:
	struct FVector                                Temp_struct_Variable;                              // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0110(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_SplinePointPropertyValueObject_C_Add_Point) == 0x000008, "Wrong alignment on IGLE_SplinePointPropertyValueObject_C_Add_Point");
static_assert(sizeof(IGLE_SplinePointPropertyValueObject_C_Add_Point) == 0x000130, "Wrong size on IGLE_SplinePointPropertyValueObject_C_Add_Point");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, Temp_struct_Variable) == 0x000000, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_Conv_IntToVector_ReturnValue) == 0x000018, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_Array_Get_Item) == 0x000048, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_Array_LastIndex_ReturnValue) == 0x000064, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, Temp_bool_Variable) == 0x000088, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000090, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, Temp_bool_Variable_1) == 0x0000A8, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0000A9, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, K2Node_Select_Default) == 0x0000B0, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_Normal_ReturnValue) == 0x0000C8, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E0, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, K2Node_Select_Default_1) == 0x000110, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_Add_Point, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'IGLE_SplinePointPropertyValueObject_C_Add_Point::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function IGLE_SplinePointPropertyValueObject.IGLE_SplinePointPropertyValueObject_C.RemovePoint
// 0x0004 (0x0004 - 0x0000)
struct IGLE_SplinePointPropertyValueObject_C_RemovePoint final
{
public:
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_SplinePointPropertyValueObject_C_RemovePoint) == 0x000004, "Wrong alignment on IGLE_SplinePointPropertyValueObject_C_RemovePoint");
static_assert(sizeof(IGLE_SplinePointPropertyValueObject_C_RemovePoint) == 0x000004, "Wrong size on IGLE_SplinePointPropertyValueObject_C_RemovePoint");
static_assert(offsetof(IGLE_SplinePointPropertyValueObject_C_RemovePoint, CallFunc_Array_LastIndex_ReturnValue) == 0x000000, "Member 'IGLE_SplinePointPropertyValueObject_C_RemovePoint::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

}

