#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mod_Trigger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mod_Trigger.Mod_Trigger_C
// 0x0050 (0x02E8 - 0x0298)
class AMod_Trigger_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    billboard;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UIGLE_InterfaceComponent*               IGLE_Interface;                                    // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<int64>                                 ActorsToTrigger;                                   // 0x02C8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<class AActor*>                         ActorsRefToTrigger;                                // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void AddActorToTrigger(int64 ID);
	void BndEvt__Mod_Trigger_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Mod_Trigger_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_Mod_Trigger(int32 EntryPoint);
	void FindActorsToTrigger();
	void OnRep_ActorsToTrigger();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RemoveActorToTrigger(int64 ID);
	void Trigger(bool Push, class AActor* Actor);
	void TriggerAll(bool Push, class AActor* Actor);
	void TryReferenceActors(bool* Success);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mod_Trigger_C">();
	}
	static class AMod_Trigger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMod_Trigger_C>();
	}
};
static_assert(alignof(AMod_Trigger_C) == 0x000008, "Wrong alignment on AMod_Trigger_C");
static_assert(sizeof(AMod_Trigger_C) == 0x0002E8, "Wrong size on AMod_Trigger_C");
static_assert(offsetof(AMod_Trigger_C, UberGraphFrame) == 0x000298, "Member 'AMod_Trigger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMod_Trigger_C, Sphere) == 0x0002A0, "Member 'AMod_Trigger_C::Sphere' has a wrong offset!");
static_assert(offsetof(AMod_Trigger_C, billboard) == 0x0002A8, "Member 'AMod_Trigger_C::billboard' has a wrong offset!");
static_assert(offsetof(AMod_Trigger_C, IGLE_Interface) == 0x0002B0, "Member 'AMod_Trigger_C::IGLE_Interface' has a wrong offset!");
static_assert(offsetof(AMod_Trigger_C, Box) == 0x0002B8, "Member 'AMod_Trigger_C::Box' has a wrong offset!");
static_assert(offsetof(AMod_Trigger_C, DefaultSceneRoot) == 0x0002C0, "Member 'AMod_Trigger_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMod_Trigger_C, ActorsToTrigger) == 0x0002C8, "Member 'AMod_Trigger_C::ActorsToTrigger' has a wrong offset!");
static_assert(offsetof(AMod_Trigger_C, ActorsRefToTrigger) == 0x0002D8, "Member 'AMod_Trigger_C::ActorsRefToTrigger' has a wrong offset!");

}

