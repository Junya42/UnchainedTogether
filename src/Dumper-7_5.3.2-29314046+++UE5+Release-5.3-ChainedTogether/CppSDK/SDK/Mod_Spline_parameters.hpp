#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mod_Spline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InGameLevelEditor_structs.hpp"


namespace SDK::Params
{

// Function Mod_Spline.Mod_Spline_C.BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Mod_Spline_C_BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature final
{
public:
	class FString                                 PropertyName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Mod_Spline_C_BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature");
static_assert(sizeof(Mod_Spline_C_BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature) == 0x000010, "Wrong size on Mod_Spline_C_BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature");
static_assert(offsetof(Mod_Spline_C_BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature, PropertyName) == 0x000000, "Member 'Mod_Spline_C_BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature::PropertyName' has a wrong offset!");

// Function Mod_Spline.Mod_Spline_C.ClearAllPoints
// 0x0040 (0x0040 - 0x0000)
struct Mod_Spline_C_ClearAllPoints final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMod_SplinePoint_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMod_SplinePoint_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_ClearAllPoints) == 0x000008, "Wrong alignment on Mod_Spline_C_ClearAllPoints");
static_assert(sizeof(Mod_Spline_C_ClearAllPoints) == 0x000040, "Wrong size on Mod_Spline_C_ClearAllPoints");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Mod_Spline_C_ClearAllPoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Mod_Spline_C_ClearAllPoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'Mod_Spline_C_ClearAllPoints::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'Mod_Spline_C_ClearAllPoints::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'Mod_Spline_C_ClearAllPoints::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Mod_Spline_C_ClearAllPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, CallFunc_Array_Get_Item) == 0x000028, "Member 'Mod_Spline_C_ClearAllPoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'Mod_Spline_C_ClearAllPoints::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, CallFunc_Max_ReturnValue) == 0x000034, "Member 'Mod_Spline_C_ClearAllPoints::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllPoints, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'Mod_Spline_C_ClearAllPoints::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Mod_Spline.Mod_Spline_C.ClearAllSplineMeshes
// 0x0038 (0x0038 - 0x0000)
struct Mod_Spline_C_ClearAllSplineMeshes final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_ClearAllSplineMeshes) == 0x000008, "Wrong alignment on Mod_Spline_C_ClearAllSplineMeshes");
static_assert(sizeof(Mod_Spline_C_ClearAllSplineMeshes) == 0x000038, "Wrong size on Mod_Spline_C_ClearAllSplineMeshes");
static_assert(offsetof(Mod_Spline_C_ClearAllSplineMeshes, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Mod_Spline_C_ClearAllSplineMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllSplineMeshes, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Mod_Spline_C_ClearAllSplineMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllSplineMeshes, CallFunc_GetComponentsByTag_ReturnValue) == 0x000008, "Member 'Mod_Spline_C_ClearAllSplineMeshes::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllSplineMeshes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'Mod_Spline_C_ClearAllSplineMeshes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllSplineMeshes, CallFunc_Array_Get_Item) == 0x000020, "Member 'Mod_Spline_C_ClearAllSplineMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllSplineMeshes, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Mod_Spline_C_ClearAllSplineMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllSplineMeshes, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'Mod_Spline_C_ClearAllSplineMeshes::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllSplineMeshes, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'Mod_Spline_C_ClearAllSplineMeshes::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ClearAllSplineMeshes, CallFunc_Max_ReturnValue) == 0x000034, "Member 'Mod_Spline_C_ClearAllSplineMeshes::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function Mod_Spline.Mod_Spline_C.DrawDebugSpline
// 0x0190 (0x0190 - 0x0000)
struct Mod_Spline_C_DrawDebugSpline final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue_1;            // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampVectorSize_Max_ImplicitCast;         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampVectorSize_Max_ImplicitCast_1;       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_DrawDebugSpline) == 0x000010, "Wrong alignment on Mod_Spline_C_DrawDebugSpline");
static_assert(sizeof(Mod_Spline_C_DrawDebugSpline) == 0x000190, "Wrong size on Mod_Spline_C_DrawDebugSpline");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, Temp_struct_Variable) == 0x000000, "Member 'Mod_Spline_C_DrawDebugSpline::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, Temp_int_Variable) == 0x000060, "Member 'Mod_Spline_C_DrawDebugSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000080, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x0000A0, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_GetSplineLength_ReturnValue) == 0x0000B8, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_ClampVectorSize_ReturnValue) == 0x0000C0, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0000E0, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_FTrunc_ReturnValue) == 0x0000F8, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x000100, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000118, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_ClampVectorSize_ReturnValue_1) == 0x000120, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_ClampVectorSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000138, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_ClampVectorSize_Max_ImplicitCast) == 0x000150, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_ClampVectorSize_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_ClampVectorSize_Max_ImplicitCast_1) == 0x000158, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_ClampVectorSize_Max_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000160, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000168, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000170, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000174, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000178, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x00017C, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000180, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawDebugSpline, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000188, "Member 'Mod_Spline_C_DrawDebugSpline::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Mod_Spline.Mod_Spline_C.DrawSpline
// 0x0008 (0x0008 - 0x0000)
struct Mod_Spline_C_DrawSpline final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_DrawSpline) == 0x000008, "Wrong alignment on Mod_Spline_C_DrawSpline");
static_assert(sizeof(Mod_Spline_C_DrawSpline) == 0x000008, "Wrong size on Mod_Spline_C_DrawSpline");
static_assert(offsetof(Mod_Spline_C_DrawSpline, Delay) == 0x000000, "Member 'Mod_Spline_C_DrawSpline::Delay' has a wrong offset!");

// Function Mod_Spline.Mod_Spline_C.DrawSplineMesh
// 0x0210 (0x0210 - 0x0000)
struct Mod_Spline_C_DrawSplineMesh final
{
public:
	class UStaticMesh*                            NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               InForwardAxis;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue_1;         // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AGM_Game_C*                             K2Node_DynamicCast_AsGM_Game;                      // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue_1;            // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_DrawSplineMesh) == 0x000010, "Wrong alignment on Mod_Spline_C_DrawSplineMesh");
static_assert(sizeof(Mod_Spline_C_DrawSplineMesh) == 0x000210, "Wrong size on Mod_Spline_C_DrawSplineMesh");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, NewMesh) == 0x000000, "Member 'Mod_Spline_C_DrawSplineMesh::NewMesh' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, InForwardAxis) == 0x000008, "Member 'Mod_Spline_C_DrawSplineMesh::InForwardAxis' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'Mod_Spline_C_DrawSplineMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Mod_Spline_C_DrawSplineMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'Mod_Spline_C_DrawSplineMesh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'Mod_Spline_C_DrawSplineMesh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00002C, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, Temp_struct_Variable) == 0x000030, "Member 'Mod_Spline_C_DrawSplineMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, Temp_int_Variable) == 0x000090, "Member 'Mod_Spline_C_DrawSplineMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000098, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_AddComponent_ReturnValue) == 0x0000A0, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000B0, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x0000B8, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_IsServer_ReturnValue) == 0x0000C0, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetComponentsByTag_ReturnValue) == 0x0000C8, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000E4, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Max_ReturnValue) == 0x0000E8, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetGameMode_ReturnValue) == 0x0000F0, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetComponentsByTag_ReturnValue_1) == 0x0000F8, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetComponentsByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, K2Node_DynamicCast_AsGM_Game) == 0x000108, "Member 'Mod_Spline_C_DrawSplineMesh::K2Node_DynamicCast_AsGM_Game' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'Mod_Spline_C_DrawSplineMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000124, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Max_ReturnValue_1) == 0x000128, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000130, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000138, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x000140, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetSplineLength_ReturnValue) == 0x000158, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_ClampVectorSize_ReturnValue) == 0x000160, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000178, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000180, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_FTrunc_ReturnValue) == 0x000198, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x0001A0, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001B8, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_ClampVectorSize_ReturnValue_1) == 0x0001C0, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_ClampVectorSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x0001D8, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0001F0, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0001F4, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0001F8, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0001FC, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_DrawSplineMesh, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000200, "Member 'Mod_Spline_C_DrawSplineMesh::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Mod_Spline.Mod_Spline_C.ExecuteUbergraph_Mod_Spline
// 0x05F0 (0x05F0 - 0x0000)
struct Mod_Spline_C_ExecuteUbergraph_Mod_Spline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMod_SplinePoint_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x00D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                Temp_object_Variable;                              // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_Game_C*                             K2Node_DynamicCast_AsGM_Game;                      // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_Game_C*                             K2Node_DynamicCast_AsGM_Game_1;                    // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGM_Game_C*                             K2Node_DynamicCast_AsGM_Game_2;                    // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_PropertyName;           // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIGLEProperty                          CallFunc_GetPropertyByName_Property;               // 0x0258(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPropertyByName_ReturnValue;            // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_BoolProperty_C*                   K2Node_DynamicCast_AsIGLE_Bool_Property;           // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_BoolFalseProperty_C*              K2Node_DynamicCast_AsIGLE_Bool_False_Property;     // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_AxisProperty_C*                   K2Node_DynamicCast_AsIGLE_Axis_Property;           // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_FloatProperty_C*                  K2Node_DynamicCast_AsIGLE_Float_Property;          // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess_1;                  // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A[0x6];                                      // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIGLE_MeshProperty_C*                   K2Node_DynamicCast_AsIGLE_Mesh_Property;           // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_BoolFalseProperty_C*              K2Node_DynamicCast_AsIGLE_Bool_False_Property_1;   // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_SplinePointPropertyValueObject_C* K2Node_DynamicCast_AsIGLE_Spline_Point_Property_Value_Object; // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index;                          // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIGLEProperty                          CallFunc_GetPropertyByName_Property_1;             // 0x0368(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPropertyByName_ReturnValue_1;          // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Delay;                          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIGLE_SplinePointPropertyValueObject_C* K2Node_DynamicCast_AsIGLE_Spline_Point_Property_Value_Object_1; // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IGLE_TryCallOnPropertyValueChanged_Success; // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIGLEProperty                          CallFunc_GetPropertyByName_Property_2;             // 0x0408(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPropertyByName_ReturnValue_2;          // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0490(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UIGLE_SplinePointPropertyValueObject_C* K2Node_DynamicCast_AsIGLE_Spline_Point_Property_Value_Object_2; // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x04B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x04E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_3;                         // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_505[0x3];                                      // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIGLEProperty                          CallFunc_GetPropertyByName_Property_3;             // 0x0518(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPropertyByName_ReturnValue_3;          // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_BoolFalseProperty_C*              K2Node_DynamicCast_AsIGLE_Bool_False_Property_2;   // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AA[0x6];                                      // 0x05AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x05B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x05C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_4;                         // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x05DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DD[0x3];                                      // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline) == 0x000010, "Wrong alignment on Mod_Spline_C_ExecuteUbergraph_Mod_Spline");
static_assert(sizeof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline) == 0x0005F0, "Wrong size on Mod_Spline_C_ExecuteUbergraph_Mod_Spline");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, EntryPoint) == 0x000000, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000008, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Loop_Counter_Variable_2) == 0x000090, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000098, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000B0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Array_Index_Variable_2) == 0x0000B4, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Array_Index_Variable_3) == 0x0000B8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x0000D8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_object_Variable) == 0x0001C0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsStatic_Mesh) == 0x0001C8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetGameMode_ReturnValue) == 0x0001D8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsGM_Game) == 0x0001E0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsGM_Game' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_IsServer_ReturnValue) == 0x0001E9, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetGameMode_ReturnValue_1) == 0x0001F0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsGM_Game_1) == 0x0001F8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsGM_Game_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_2) == 0x000200, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_IsServer_ReturnValue_1) == 0x000201, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetGameMode_ReturnValue_2) == 0x000208, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_IsServer_ReturnValue_2) == 0x000210, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsGM_Game_2) == 0x000218, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsGM_Game_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_3) == 0x000220, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Loop_Counter_Variable_3) == 0x000224, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Add_IntInt_ReturnValue_1) == 0x000228, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Array_Index_Variable_4) == 0x00022C, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_int_Loop_Counter_Variable_4) == 0x000230, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Less_IntInt_ReturnValue) == 0x000234, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Add_IntInt_ReturnValue_2) == 0x000238, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_ComponentBoundEvent_PropertyName) == 0x000240, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_ComponentBoundEvent_PropertyName' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_SwitchString_CmpSuccess) == 0x000250, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetPropertyByName_Property) == 0x000258, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetPropertyByName_Property' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetPropertyByName_ReturnValue) == 0x0002D8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetPropertyByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Bool_Property) == 0x0002E0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Bool_Property' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_4) == 0x0002E8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Bool_False_Property) == 0x0002F0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Bool_False_Property' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_5) == 0x0002F8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Axis_Property) == 0x000300, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Axis_Property' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_6) == 0x000308, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Float_Property) == 0x000310, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Float_Property' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_7) == 0x000318, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_SwitchString_CmpSuccess_1) == 0x000319, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_SwitchString_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000320, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Mesh_Property) == 0x000328, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Mesh_Property' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_8) == 0x000330, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Bool_False_Property_1) == 0x000338, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Bool_False_Property_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_9) == 0x000340, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000341, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Spline_Point_Property_Value_Object) == 0x000348, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Spline_Point_Property_Value_Object' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_10) == 0x000350, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_CustomEvent_Loaded) == 0x000358, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_K2_AttachToActor_ReturnValue) == 0x000360, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_CustomEvent_Index) == 0x000364, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetPropertyByName_Property_1) == 0x000368, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetPropertyByName_Property_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetPropertyByName_ReturnValue_1) == 0x0003E8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetPropertyByName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_CustomEvent_Delay) == 0x0003F0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Spline_Point_Property_Value_Object_1) == 0x0003F8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Spline_Point_Property_Value_Object_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_11) == 0x000400, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_IGLE_TryCallOnPropertyValueChanged_Success) == 0x000401, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_IGLE_TryCallOnPropertyValueChanged_Success' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetPropertyByName_Property_2) == 0x000408, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetPropertyByName_Property_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetPropertyByName_ReturnValue_2) == 0x000488, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetPropertyByName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000490, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Spline_Point_Property_Value_Object_2) == 0x0004A0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Spline_Point_Property_Value_Object_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_12) == 0x0004A8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Get_Item_1) == 0x0004B0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Get_Item_2) == 0x0004B8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Length_ReturnValue_1) == 0x0004D0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Length_ReturnValue_2) == 0x0004D4, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004D8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0004DC, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Max_ReturnValue) == 0x0004E0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x0004E8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Get_Item_3) == 0x0004F8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Length_ReturnValue_3) == 0x000500, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_ComponentHasTag_ReturnValue) == 0x000504, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000508, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Max_ReturnValue_1) == 0x00050C, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_bool_Has_Been_Initd_Variable) == 0x000510, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetPropertyByName_Property_3) == 0x000518, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetPropertyByName_Property_3' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetPropertyByName_ReturnValue_3) == 0x000598, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetPropertyByName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_AsIGLE_Bool_False_Property_2) == 0x0005A0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_AsIGLE_Bool_False_Property_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_DynamicCast_bSuccess_13) == 0x0005A8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, Temp_bool_IsClosed_Variable) == 0x0005A9, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_GetComponentsByTag_ReturnValue) == 0x0005B0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, K2Node_CreateDelegate_OutputDelegate) == 0x0005C0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Get_Item_4) == 0x0005D0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Array_Length_ReturnValue_4) == 0x0005D8, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Less_IntInt_ReturnValue_2) == 0x0005DC, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_ExecuteUbergraph_Mod_Spline, CallFunc_Delay_Duration_ImplicitCast) == 0x0005E0, "Member 'Mod_Spline_C_ExecuteUbergraph_Mod_Spline::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function Mod_Spline.Mod_Spline_C.OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85
// 0x0008 (0x0008 - 0x0000)
struct Mod_Spline_C_OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85) == 0x000008, "Wrong alignment on Mod_Spline_C_OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85");
static_assert(sizeof(Mod_Spline_C_OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85) == 0x000008, "Wrong size on Mod_Spline_C_OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85");
static_assert(offsetof(Mod_Spline_C_OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85, Loaded) == 0x000000, "Member 'Mod_Spline_C_OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85::Loaded' has a wrong offset!");

// Function Mod_Spline.Mod_Spline_C.OnPointRemove
// 0x0004 (0x0004 - 0x0000)
struct Mod_Spline_C_OnPointRemove final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_OnPointRemove) == 0x000004, "Wrong alignment on Mod_Spline_C_OnPointRemove");
static_assert(sizeof(Mod_Spline_C_OnPointRemove) == 0x000004, "Wrong size on Mod_Spline_C_OnPointRemove");
static_assert(offsetof(Mod_Spline_C_OnPointRemove, Index_0) == 0x000000, "Member 'Mod_Spline_C_OnPointRemove::Index_0' has a wrong offset!");

// Function Mod_Spline.Mod_Spline_C.UpdateLinearity
// 0x0038 (0x0038 - 0x0000)
struct Mod_Spline_C_UpdateLinearity final
{
public:
	bool                                          Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplinePointType                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplinePointType                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplinePointType                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Spline_C_UpdateLinearity) == 0x000008, "Wrong alignment on Mod_Spline_C_UpdateLinearity");
static_assert(sizeof(Mod_Spline_C_UpdateLinearity) == 0x000038, "Wrong size on Mod_Spline_C_UpdateLinearity");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, Index_0) == 0x000000, "Member 'Mod_Spline_C_UpdateLinearity::Index_0' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, Temp_bool_Variable) == 0x000001, "Member 'Mod_Spline_C_UpdateLinearity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, Temp_byte_Variable) == 0x000002, "Member 'Mod_Spline_C_UpdateLinearity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, Temp_byte_Variable_1) == 0x000003, "Member 'Mod_Spline_C_UpdateLinearity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, Temp_int_Variable) == 0x000004, "Member 'Mod_Spline_C_UpdateLinearity::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, K2Node_Select_Default) == 0x000008, "Member 'Mod_Spline_C_UpdateLinearity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Mod_Spline_C_UpdateLinearity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'Mod_Spline_C_UpdateLinearity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000028, "Member 'Mod_Spline_C_UpdateLinearity::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'Mod_Spline_C_UpdateLinearity::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Spline_C_UpdateLinearity, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'Mod_Spline_C_UpdateLinearity::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

}

