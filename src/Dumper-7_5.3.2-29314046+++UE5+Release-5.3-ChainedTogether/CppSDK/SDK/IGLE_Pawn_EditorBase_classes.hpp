#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IGLE_Pawn_EditorBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass IGLE_Pawn_EditorBase.IGLE_Pawn_EditorBase_C
// 0x0310 (0x0630 - 0x0320)
#pragma pack(push, 0x1)
class alignas(0x10) AIGLE_Pawn_EditorBase_C : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneCaptureComponent2D*               ViewCapture;                                       // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       ProxyCamera;                                       // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        MaxMovementSpeed;                                  // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovementAcceleration;                              // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovementDrag;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MovementVelocity;                                  // 0x0358(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LinearMovementMultiplier;                          // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookSensitivity;                                   // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowGrid;                                          // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AIGLE_A_FollowingGrid_C*                GridActor;                                         // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        GridSize;                                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FocusedForMovement;                                // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PreFocusedCursorPos;                               // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentlyDraggingPlacableActor;                    // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               PlacingPlacablesTraceChannel;                      // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PlacingPlacablesMaxDistance;                       // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CurrentlyPlacingPlacableActorClass;                // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSet<class AActor*>                           SelectedPlacableActors;                            // 0x03D0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnActorSelected;                                   // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HighlightSelectedActors;                           // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectedActorsHighlightStencil;                    // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnActorDeselected;                                 // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMaterialInterface*                     SelectionHighlightPostProcessMat;                  // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AIGLE_A_Gizmo_C*                        GizmoActor;                                        // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 BaseViewRT;                                        // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LastViewportSize;                                  // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 SecondaryViewRT;                                   // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendables                    DefaultViewportPostProcessMaterials;               // 0x0478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         GizmoStencilValue;                                 // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FOV;                                               // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CurrentViewport;                                   // 0x0498(0x0028)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FMatrix                                LastProjectionMatrix;                              // 0x04C0(0x0080)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PreBasePassGizmoHidden_;                           // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              BoxSelectStartingMousePos;                         // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBoxSelecting;                                    // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              BoxSelectEndingMousePos;                           // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIGLE_W_BoxSelect_C*                    BoxSelectionWidget;                                // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnViewportResize;                                  // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ETraceTypeQuery                               SelectionActorChannel;                             // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseActorOriginForBoxSelection;                     // 0x0589(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A[0x6];                                      // 0x058A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BoxSelectMaxDistance;                              // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UIGLE_ActionBuffer_Base_C*>      UndoBuffer;                                        // 0x0598(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MaxActionBufferSize;                               // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UIGLE_ActionBuffer_Base_C*>      RedoBuffer;                                        // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<class AActor*>                           LastFrameSelectedPlacables;                        // 0x05C0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        RenderScale;                                       // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CTRL_Pressed;                                      // 0x0618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 JustPlacedActor;                                   // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddActionToUndoBuffer(class UIGLE_ActionBuffer_Base_C* New_Action);
	void ApplyGizmoWorldSpaceFrameDeltaTransform(const struct FTransform& InTransform, struct FTransform* OutTransform);
	void BeginBoxSelect();
	void BeginPlay_BindPlacableActorSelectionStuff();
	void BeginPlay_SpawnGizmo();
	void BoxSelect_ActorOrigin();
	void BoxSelect_FrustumTrace();
	void ClampPointToBox(const struct FBox2D& Box, const struct FVector2D& Point__PlusX_PlusY_, struct FVector2D* OutPoint);
	void ClearPlacableActorSelection(bool CreateUndoAction);
	void DeleteCurrentSelection();
	void DeselectAllPlacables();
	void DeselectPlacableActor(class AActor* Actor, bool CreateUndoAction);
	void DestroyGroup(TArray<class AActor*>& Actors);
	void DuplicateCurrentSelection(TMap<class AActor*, struct FIGLEPlacableSave>* Spawned, TArray<class AActor*>* DuplicatedPlacables, TArray<class AActor*>* PreviousSelection);
	void EndBoxSelect();
	void Event_OnActorDeselected(class AActor* Actor, bool CreateUndoAction);
	void Event_OnActorSelected(class AActor* Actor, bool CreateUndoAction);
	void ExecuteUbergraph_IGLE_Pawn_EditorBase(int32 EntryPoint);
	void GetIGLECursorPosition(double* LocationX__PlusX_, double* LocationY__MinusY_);
	void GetIGLECursorWorldLocDir(struct FVector* WorldLocation, struct FVector* WorldDirection);
	void GetWidgetGeometryViewportBounds(const struct FGeometry& WidgetGeometry, struct FBox2D* ViewportBounds);
	void GlobalViewPointToIGLEViewPoint(const struct FVector2D& Global_View_Point__PlusX_PlusY_, const struct FBox2D& Viewport, struct FVector2D* IGLE_View_Point__PlusX_PlusY_);
	void IGLEView_Pos_to_World_Loc_Dir(const struct FVector2D& IGLE_View_Pos__PlusX_PlusY_, struct FVector* World_Location, struct FVector* World_Direction);
	void IGLEViewPointToGlobalViewPoint(const struct FVector2D& IGLE_View_Point__PlusX_PlusY_, const struct FBox2D& Viewport, struct FVector2D* GlobalViewPoint__PlusX_PlusY_);
	void IGLEViewPointToWorldLocDir(const struct FVector2D& IGLE_Point__PlusX_PlusY_, struct FVector* WorldLocation, struct FVector* WorldDirection);
	void InpActEvt_LeftControl_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_LeftControl_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void Input_Leave_Tyro();
	bool Is_Transforming_in_World_Space();
	void IsCursorInViewport(bool* Value);
	bool IsScreenPointInViewport(const struct FVector2D& Point__PlusX_MinusY_, const struct FBox2D& ViewportOverride);
	void Jump_Input();
	void LookRight(double Axis);
	void LookUp(double Axis);
	void MoveForward(double Axis);
	void MoveRight(double Axis);
	void MoveUp(double Scale);
	void MyPlayerController(class APlayerController** AsPlayer_Controller);
	void OnActorDeselected__DelegateSignature(class AActor* Actor, bool CreateUndoAction);
	void OnActorSelected__DelegateSignature(class AActor* Actor, bool CreateUndoAction);
	void OnSelectionChanged(bool CreateUndoAction);
	void OnViewportResize__DelegateSignature();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void RedoLastAction();
	void RefreshGizmoPosition();
	void SelectPlacableActor(class AActor* Actor, bool CreateUndoAction);
	void SetFocusedForMovement(bool FocusedForMovement_0);
	void SetIGLECursorPosition(double IGLE_View_Point_X__PlusX_, double IGLE_View_Point_Y__PlusY_);
	void SetNewViewportSize(const struct FVector2D& Size);
	void Sprint(bool Sprint_0);
	void Stance();
	void StartPlacingPlacable(class UClass* PlacableClass);
	void StopPlacingPlacable();
	void TestControlNotify();
	void Tick_BoxSelection();
	void Tick_DoMovement();
	void Tick_GizmoStuff();
	void Tick_PlacingPlacables();
	void Tick_RenderFrame();
	void Tick_SelectingPlacables();
	void Tick_UpdateGrid();
	void UndoLastAction();
	void UserConstructionScript();
	void WorldPosToIGLEViewPoint(const struct FVector& WorldPos, struct FVector2D* IGLE_View_Point__PlusX_MinusY_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IGLE_Pawn_EditorBase_C">();
	}
	static class AIGLE_Pawn_EditorBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIGLE_Pawn_EditorBase_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AIGLE_Pawn_EditorBase_C) == 0x000010, "Wrong alignment on AIGLE_Pawn_EditorBase_C");
static_assert(sizeof(AIGLE_Pawn_EditorBase_C) == 0x000630, "Wrong size on AIGLE_Pawn_EditorBase_C");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, UberGraphFrame) == 0x000320, "Member 'AIGLE_Pawn_EditorBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, ViewCapture) == 0x000328, "Member 'AIGLE_Pawn_EditorBase_C::ViewCapture' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, Sphere) == 0x000330, "Member 'AIGLE_Pawn_EditorBase_C::Sphere' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, ProxyCamera) == 0x000338, "Member 'AIGLE_Pawn_EditorBase_C::ProxyCamera' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, MaxMovementSpeed) == 0x000340, "Member 'AIGLE_Pawn_EditorBase_C::MaxMovementSpeed' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, MovementAcceleration) == 0x000348, "Member 'AIGLE_Pawn_EditorBase_C::MovementAcceleration' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, MovementDrag) == 0x000350, "Member 'AIGLE_Pawn_EditorBase_C::MovementDrag' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, MovementVelocity) == 0x000358, "Member 'AIGLE_Pawn_EditorBase_C::MovementVelocity' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, LinearMovementMultiplier) == 0x000370, "Member 'AIGLE_Pawn_EditorBase_C::LinearMovementMultiplier' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, LookSensitivity) == 0x000378, "Member 'AIGLE_Pawn_EditorBase_C::LookSensitivity' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, ShowGrid) == 0x000380, "Member 'AIGLE_Pawn_EditorBase_C::ShowGrid' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, GridActor) == 0x000388, "Member 'AIGLE_Pawn_EditorBase_C::GridActor' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, GridSize) == 0x000390, "Member 'AIGLE_Pawn_EditorBase_C::GridSize' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, FocusedForMovement) == 0x000398, "Member 'AIGLE_Pawn_EditorBase_C::FocusedForMovement' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, PreFocusedCursorPos) == 0x0003A0, "Member 'AIGLE_Pawn_EditorBase_C::PreFocusedCursorPos' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, CurrentlyDraggingPlacableActor) == 0x0003B0, "Member 'AIGLE_Pawn_EditorBase_C::CurrentlyDraggingPlacableActor' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, PlacingPlacablesTraceChannel) == 0x0003B8, "Member 'AIGLE_Pawn_EditorBase_C::PlacingPlacablesTraceChannel' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, PlacingPlacablesMaxDistance) == 0x0003C0, "Member 'AIGLE_Pawn_EditorBase_C::PlacingPlacablesMaxDistance' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, CurrentlyPlacingPlacableActorClass) == 0x0003C8, "Member 'AIGLE_Pawn_EditorBase_C::CurrentlyPlacingPlacableActorClass' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, SelectedPlacableActors) == 0x0003D0, "Member 'AIGLE_Pawn_EditorBase_C::SelectedPlacableActors' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, OnActorSelected) == 0x000420, "Member 'AIGLE_Pawn_EditorBase_C::OnActorSelected' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, HighlightSelectedActors) == 0x000430, "Member 'AIGLE_Pawn_EditorBase_C::HighlightSelectedActors' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, SelectedActorsHighlightStencil) == 0x000434, "Member 'AIGLE_Pawn_EditorBase_C::SelectedActorsHighlightStencil' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, OnActorDeselected) == 0x000438, "Member 'AIGLE_Pawn_EditorBase_C::OnActorDeselected' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, SelectionHighlightPostProcessMat) == 0x000448, "Member 'AIGLE_Pawn_EditorBase_C::SelectionHighlightPostProcessMat' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, GizmoActor) == 0x000450, "Member 'AIGLE_Pawn_EditorBase_C::GizmoActor' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, BaseViewRT) == 0x000458, "Member 'AIGLE_Pawn_EditorBase_C::BaseViewRT' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, LastViewportSize) == 0x000460, "Member 'AIGLE_Pawn_EditorBase_C::LastViewportSize' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, SecondaryViewRT) == 0x000470, "Member 'AIGLE_Pawn_EditorBase_C::SecondaryViewRT' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, DefaultViewportPostProcessMaterials) == 0x000478, "Member 'AIGLE_Pawn_EditorBase_C::DefaultViewportPostProcessMaterials' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, GizmoStencilValue) == 0x000488, "Member 'AIGLE_Pawn_EditorBase_C::GizmoStencilValue' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, FOV) == 0x000490, "Member 'AIGLE_Pawn_EditorBase_C::FOV' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, CurrentViewport) == 0x000498, "Member 'AIGLE_Pawn_EditorBase_C::CurrentViewport' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, LastProjectionMatrix) == 0x0004C0, "Member 'AIGLE_Pawn_EditorBase_C::LastProjectionMatrix' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, PreBasePassGizmoHidden_) == 0x000540, "Member 'AIGLE_Pawn_EditorBase_C::PreBasePassGizmoHidden_' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, BoxSelectStartingMousePos) == 0x000548, "Member 'AIGLE_Pawn_EditorBase_C::BoxSelectStartingMousePos' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, IsBoxSelecting) == 0x000558, "Member 'AIGLE_Pawn_EditorBase_C::IsBoxSelecting' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, BoxSelectEndingMousePos) == 0x000560, "Member 'AIGLE_Pawn_EditorBase_C::BoxSelectEndingMousePos' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, BoxSelectionWidget) == 0x000570, "Member 'AIGLE_Pawn_EditorBase_C::BoxSelectionWidget' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, OnViewportResize) == 0x000578, "Member 'AIGLE_Pawn_EditorBase_C::OnViewportResize' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, SelectionActorChannel) == 0x000588, "Member 'AIGLE_Pawn_EditorBase_C::SelectionActorChannel' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, UseActorOriginForBoxSelection) == 0x000589, "Member 'AIGLE_Pawn_EditorBase_C::UseActorOriginForBoxSelection' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, BoxSelectMaxDistance) == 0x000590, "Member 'AIGLE_Pawn_EditorBase_C::BoxSelectMaxDistance' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, UndoBuffer) == 0x000598, "Member 'AIGLE_Pawn_EditorBase_C::UndoBuffer' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, MaxActionBufferSize) == 0x0005A8, "Member 'AIGLE_Pawn_EditorBase_C::MaxActionBufferSize' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, RedoBuffer) == 0x0005B0, "Member 'AIGLE_Pawn_EditorBase_C::RedoBuffer' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, LastFrameSelectedPlacables) == 0x0005C0, "Member 'AIGLE_Pawn_EditorBase_C::LastFrameSelectedPlacables' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, RenderScale) == 0x000610, "Member 'AIGLE_Pawn_EditorBase_C::RenderScale' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, CTRL_Pressed) == 0x000618, "Member 'AIGLE_Pawn_EditorBase_C::CTRL_Pressed' has a wrong offset!");
static_assert(offsetof(AIGLE_Pawn_EditorBase_C, JustPlacedActor) == 0x000620, "Member 'AIGLE_Pawn_EditorBase_C::JustPlacedActor' has a wrong offset!");

}

