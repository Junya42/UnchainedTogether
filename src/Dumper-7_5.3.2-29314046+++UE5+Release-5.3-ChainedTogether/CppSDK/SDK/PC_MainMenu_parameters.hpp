#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_MainMenu

#include "Basic.hpp"

#include "E_ChoosenChar_structs.hpp"


namespace SDK::Params
{

// Function PC_MainMenu.PC_MainMenu_C.BPI_RequestCharacter
// 0x0001 (0x0001 - 0x0000)
struct PC_MainMenu_C_BPI_RequestCharacter final
{
public:
	E_ChoosenChar                                 Character_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_BPI_RequestCharacter) == 0x000001, "Wrong alignment on PC_MainMenu_C_BPI_RequestCharacter");
static_assert(sizeof(PC_MainMenu_C_BPI_RequestCharacter) == 0x000001, "Wrong size on PC_MainMenu_C_BPI_RequestCharacter");
static_assert(offsetof(PC_MainMenu_C_BPI_RequestCharacter, Character_0) == 0x000000, "Member 'PC_MainMenu_C_BPI_RequestCharacter::Character_0' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.ExecuteUbergraph_PC_MainMenu
// 0x0068 (0x0068 - 0x0000)
struct PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 K2Node_Event_Character;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Message;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RefreshTchat;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Device;                               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_MovingObject_C*                     K2Node_Event_MovingObject;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundWave*                             K2Node_Event_Sound;                                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        K2Node_Event_AudioComponent;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 K2Node_Event_Char;                                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_RescueComponent;                      // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ExitingCar;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_CanEscape;                            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu) == 0x000008, "Wrong alignment on PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu");
static_assert(sizeof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu) == 0x000068, "Wrong size on PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, EntryPoint) == 0x000000, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_Character) == 0x000004, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_Actor) == 0x000008, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_Message) == 0x000010, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_Message' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_RefreshTchat) == 0x000020, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_RefreshTchat' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_Device) == 0x000028, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_Device' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_MovingObject) == 0x000038, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_MovingObject' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_Sound) == 0x000040, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_Sound' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_AudioComponent) == 0x000048, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_AudioComponent' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_Char) == 0x000050, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_Char' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_RescueComponent) == 0x000058, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_RescueComponent' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_ExitingCar) == 0x000060, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_ExitingCar' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu, K2Node_Event_CanEscape) == 0x000061, "Member 'PC_MainMenu_C_ExecuteUbergraph_PC_MainMenu::K2Node_Event_CanEscape' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.GetAudioDevices
// 0x0010 (0x0010 - 0x0000)
struct PC_MainMenu_C_GetAudioDevices final
{
public:
	TArray<class FString>                         Devices;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_MainMenu_C_GetAudioDevices) == 0x000008, "Wrong alignment on PC_MainMenu_C_GetAudioDevices");
static_assert(sizeof(PC_MainMenu_C_GetAudioDevices) == 0x000010, "Wrong size on PC_MainMenu_C_GetAudioDevices");
static_assert(offsetof(PC_MainMenu_C_GetAudioDevices, Devices) == 0x000000, "Member 'PC_MainMenu_C_GetAudioDevices::Devices' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.GetControlledActor
// 0x0008 (0x0008 - 0x0000)
struct PC_MainMenu_C_GetControlledActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_GetControlledActor) == 0x000008, "Wrong alignment on PC_MainMenu_C_GetControlledActor");
static_assert(sizeof(PC_MainMenu_C_GetControlledActor) == 0x000008, "Wrong size on PC_MainMenu_C_GetControlledActor");
static_assert(offsetof(PC_MainMenu_C_GetControlledActor, Actor) == 0x000000, "Member 'PC_MainMenu_C_GetControlledActor::Actor' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.PlayAudioComponent
// 0x0008 (0x0008 - 0x0000)
struct PC_MainMenu_C_PlayAudioComponent final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_PlayAudioComponent) == 0x000008, "Wrong alignment on PC_MainMenu_C_PlayAudioComponent");
static_assert(sizeof(PC_MainMenu_C_PlayAudioComponent) == 0x000008, "Wrong size on PC_MainMenu_C_PlayAudioComponent");
static_assert(offsetof(PC_MainMenu_C_PlayAudioComponent, AudioComponent) == 0x000000, "Member 'PC_MainMenu_C_PlayAudioComponent::AudioComponent' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.PlaySound
// 0x0008 (0x0008 - 0x0000)
struct PC_MainMenu_C_PlaySound final
{
public:
	class USoundWave*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_PlaySound) == 0x000008, "Wrong alignment on PC_MainMenu_C_PlaySound");
static_assert(sizeof(PC_MainMenu_C_PlaySound) == 0x000008, "Wrong size on PC_MainMenu_C_PlaySound");
static_assert(offsetof(PC_MainMenu_C_PlaySound, Sound) == 0x000000, "Member 'PC_MainMenu_C_PlaySound::Sound' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.Rescue(Srv)
// 0x0010 (0x0010 - 0x0000)
struct PC_MainMenu_C_Rescue_Srv_ final
{
public:
	class UPrimitiveComponent*                    RescueComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ExitingCar;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_Rescue_Srv_) == 0x000008, "Wrong alignment on PC_MainMenu_C_Rescue_Srv_");
static_assert(sizeof(PC_MainMenu_C_Rescue_Srv_) == 0x000010, "Wrong size on PC_MainMenu_C_Rescue_Srv_");
static_assert(offsetof(PC_MainMenu_C_Rescue_Srv_, RescueComponent) == 0x000000, "Member 'PC_MainMenu_C_Rescue_Srv_::RescueComponent' has a wrong offset!");
static_assert(offsetof(PC_MainMenu_C_Rescue_Srv_, ExitingCar) == 0x000008, "Member 'PC_MainMenu_C_Rescue_Srv_::ExitingCar' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.SendMessageClient
// 0x0010 (0x0010 - 0x0000)
struct PC_MainMenu_C_SendMessageClient final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_SendMessageClient) == 0x000008, "Wrong alignment on PC_MainMenu_C_SendMessageClient");
static_assert(sizeof(PC_MainMenu_C_SendMessageClient) == 0x000010, "Wrong size on PC_MainMenu_C_SendMessageClient");
static_assert(offsetof(PC_MainMenu_C_SendMessageClient, Message) == 0x000000, "Member 'PC_MainMenu_C_SendMessageClient::Message' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.SetAudioDevice
// 0x0010 (0x0010 - 0x0000)
struct PC_MainMenu_C_SetAudioDevice final
{
public:
	class FString                                 Device;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_SetAudioDevice) == 0x000008, "Wrong alignment on PC_MainMenu_C_SetAudioDevice");
static_assert(sizeof(PC_MainMenu_C_SetAudioDevice) == 0x000010, "Wrong size on PC_MainMenu_C_SetAudioDevice");
static_assert(offsetof(PC_MainMenu_C_SetAudioDevice, Device) == 0x000000, "Member 'PC_MainMenu_C_SetAudioDevice::Device' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.SetControlledPawn
// 0x0008 (0x0008 - 0x0000)
struct PC_MainMenu_C_SetControlledPawn final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_SetControlledPawn) == 0x000008, "Wrong alignment on PC_MainMenu_C_SetControlledPawn");
static_assert(sizeof(PC_MainMenu_C_SetControlledPawn) == 0x000008, "Wrong size on PC_MainMenu_C_SetControlledPawn");
static_assert(offsetof(PC_MainMenu_C_SetControlledPawn, Actor) == 0x000000, "Member 'PC_MainMenu_C_SetControlledPawn::Actor' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.SetLocalMpChosenChar
// 0x0001 (0x0001 - 0x0000)
struct PC_MainMenu_C_SetLocalMpChosenChar final
{
public:
	E_ChoosenChar                                 Char;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_SetLocalMpChosenChar) == 0x000001, "Wrong alignment on PC_MainMenu_C_SetLocalMpChosenChar");
static_assert(sizeof(PC_MainMenu_C_SetLocalMpChosenChar) == 0x000001, "Wrong size on PC_MainMenu_C_SetLocalMpChosenChar");
static_assert(offsetof(PC_MainMenu_C_SetLocalMpChosenChar, Char) == 0x000000, "Member 'PC_MainMenu_C_SetLocalMpChosenChar::Char' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.ShowTchatUI
// 0x0001 (0x0001 - 0x0000)
struct PC_MainMenu_C_ShowTchatUI final
{
public:
	bool                                          RefreshTchat;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_ShowTchatUI) == 0x000001, "Wrong alignment on PC_MainMenu_C_ShowTchatUI");
static_assert(sizeof(PC_MainMenu_C_ShowTchatUI) == 0x000001, "Wrong size on PC_MainMenu_C_ShowTchatUI");
static_assert(offsetof(PC_MainMenu_C_ShowTchatUI, RefreshTchat) == 0x000000, "Member 'PC_MainMenu_C_ShowTchatUI::RefreshTchat' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.Trigger Moving Object
// 0x0008 (0x0008 - 0x0000)
struct PC_MainMenu_C_Trigger_Moving_Object final
{
public:
	class ABP_MovingObject_C*                     MovingObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_Trigger_Moving_Object) == 0x000008, "Wrong alignment on PC_MainMenu_C_Trigger_Moving_Object");
static_assert(sizeof(PC_MainMenu_C_Trigger_Moving_Object) == 0x000008, "Wrong size on PC_MainMenu_C_Trigger_Moving_Object");
static_assert(offsetof(PC_MainMenu_C_Trigger_Moving_Object, MovingObject) == 0x000000, "Member 'PC_MainMenu_C_Trigger_Moving_Object::MovingObject' has a wrong offset!");

// Function PC_MainMenu.PC_MainMenu_C.UpdateCanEscape
// 0x0001 (0x0001 - 0x0000)
struct PC_MainMenu_C_UpdateCanEscape final
{
public:
	bool                                          CanEscape_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_MainMenu_C_UpdateCanEscape) == 0x000001, "Wrong alignment on PC_MainMenu_C_UpdateCanEscape");
static_assert(sizeof(PC_MainMenu_C_UpdateCanEscape) == 0x000001, "Wrong size on PC_MainMenu_C_UpdateCanEscape");
static_assert(offsetof(PC_MainMenu_C_UpdateCanEscape, CanEscape_0) == 0x000000, "Member 'PC_MainMenu_C_UpdateCanEscape::CanEscape_0' has a wrong offset!");

}

