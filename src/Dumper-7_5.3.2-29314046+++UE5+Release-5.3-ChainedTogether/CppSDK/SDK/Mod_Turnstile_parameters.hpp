#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mod_Turnstile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Mod_Turnstile.Mod_Turnstile_C.AddActorToTrigger
// 0x0008 (0x0008 - 0x0000)
struct Mod_Turnstile_C_AddActorToTrigger final
{
public:
	int64                                         ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_AddActorToTrigger) == 0x000008, "Wrong alignment on Mod_Turnstile_C_AddActorToTrigger");
static_assert(sizeof(Mod_Turnstile_C_AddActorToTrigger) == 0x000008, "Wrong size on Mod_Turnstile_C_AddActorToTrigger");
static_assert(offsetof(Mod_Turnstile_C_AddActorToTrigger, ID) == 0x000000, "Member 'Mod_Turnstile_C_AddActorToTrigger::ID' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.BndEvt__Mod_Turnstile_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Mod_Turnstile_C_BndEvt__Mod_Turnstile_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature final
{
public:
	class FString                                 PropertyName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_BndEvt__Mod_Turnstile_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Mod_Turnstile_C_BndEvt__Mod_Turnstile_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature");
static_assert(sizeof(Mod_Turnstile_C_BndEvt__Mod_Turnstile_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature) == 0x000010, "Wrong size on Mod_Turnstile_C_BndEvt__Mod_Turnstile_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature");
static_assert(offsetof(Mod_Turnstile_C_BndEvt__Mod_Turnstile_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature, PropertyName) == 0x000000, "Member 'Mod_Turnstile_C_BndEvt__Mod_Turnstile_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature::PropertyName' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.ExecuteUbergraph_Mod_Turnstile
// 0x0398 (0x0398 - 0x0000)
struct Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_Game_C*                             K2Node_DynamicCast_AsGM_Game;                      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateTurn_TurnRate;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x0198(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumPlayers_ReturnValue;                // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_PropertyName;           // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_ID_1;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Int64ToString_ReturnValue;           // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_ID;                             // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_Game_C*                             K2Node_DynamicCast_AsGM_Game_1;                    // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_PropertyValueObject*              CallFunc_GetPropertyValueByName_Value;             // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPropertyValueByName_ReturnValue;       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_FloatProperty_C*                  K2Node_DynamicCast_AsIGLE_Float_Property;          // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_BoolFalseProperty_C*              K2Node_DynamicCast_AsIGLE_Bool_False_Property;     // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_323[0x5];                                      // 0x0323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxPivotAlpha_Alpha;                   // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinPivotAlpha_Alpha;                   // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMinPivotAlpha_Alpha_1;                 // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Axis;                           // 0x0368(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryReferenceActors_Success;               // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386[0x2];                                      // 0x0386(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile) == 0x000008, "Wrong alignment on Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile");
static_assert(sizeof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile) == 0x000398, "Wrong size on Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, EntryPoint) == 0x000000, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_IsServer_ReturnValue) == 0x000010, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_HasAuthority_ReturnValue) == 0x000011, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_HasAuthority_ReturnValue_1) == 0x000012, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetGameMode_ReturnValue) == 0x000030, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000038, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_DynamicCast_AsGM_Game) == 0x000040, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_DynamicCast_AsGM_Game' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_UpdateTurn_TurnRate) == 0x000058, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_UpdateTurn_TurnRate' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000078, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000160, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000168, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000170, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_MakeRotator_ReturnValue_1) == 0x000178, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000190, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x000198, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_IsServer_ReturnValue_1) == 0x000280, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetNumPlayers_ReturnValue) == 0x000284, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetNumPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Greater_IntInt_ReturnValue) == 0x000288, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_HasAuthority_ReturnValue_2) == 0x000289, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_SelectFloat_ReturnValue) == 0x000290, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_SelectFloat_ReturnValue_1) == 0x000298, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_ComponentBoundEvent_PropertyName) == 0x0002A0, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_ComponentBoundEvent_PropertyName' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_SwitchString_CmpSuccess) == 0x0002B0, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_CustomEvent_ID_1) == 0x0002B8, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_CustomEvent_ID_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Conv_Int64ToString_ReturnValue) == 0x0002C0, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Conv_Int64ToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Array_AddUnique_ReturnValue) == 0x0002D0, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetGameMode_ReturnValue_1) == 0x0002D8, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_CustomEvent_ID) == 0x0002E0, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_CustomEvent_ID' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_DynamicCast_AsGM_Game_1) == 0x0002E8, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_DynamicCast_AsGM_Game_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_DynamicCast_bSuccess_1) == 0x0002F0, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetPropertyValueByName_Value) == 0x0002F8, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetPropertyValueByName_Value' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetPropertyValueByName_ReturnValue) == 0x000300, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetPropertyValueByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Array_RemoveItem_ReturnValue) == 0x000301, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_DynamicCast_AsIGLE_Float_Property) == 0x000308, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_DynamicCast_AsIGLE_Float_Property' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_DynamicCast_bSuccess_2) == 0x000310, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_DynamicCast_AsIGLE_Bool_False_Property) == 0x000318, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_DynamicCast_AsIGLE_Bool_False_Property' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_DynamicCast_bSuccess_3) == 0x000320, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Not_PreBool_ReturnValue) == 0x000321, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_HasAuthority_ReturnValue_3) == 0x000322, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetMaxPivotAlpha_Alpha) == 0x000328, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetMaxPivotAlpha_Alpha' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetMinPivotAlpha_Alpha) == 0x000330, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetMinPivotAlpha_Alpha' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000338, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000339, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_GetMinPivotAlpha_Alpha_1) == 0x000340, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_GetMinPivotAlpha_Alpha_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_SelectFloat_ReturnValue_2) == 0x000348, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000350, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_SelectFloat_ReturnValue_3) == 0x000358, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_SelectFloat_ReturnValue_4) == 0x000360, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, K2Node_CustomEvent_Axis) == 0x000368, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::K2Node_CustomEvent_Axis' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_FInterpTo_ReturnValue) == 0x000370, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Array_Get_Item) == 0x000378, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Array_Length_ReturnValue) == 0x000380, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Less_IntInt_ReturnValue) == 0x000384, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_TryReferenceActors_Success) == 0x000385, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_TryReferenceActors_Success' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_Delay_Duration_ImplicitCast) == 0x000388, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00038C, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000390, "Member 'Mod_Turnstile_C_ExecuteUbergraph_Mod_Turnstile::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.GetMaxPivotAlpha
// 0x0058 (0x0058 - 0x0000)
struct Mod_Turnstile_C_GetMaxPivotAlpha final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalAlpha;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PivotAction_C>    K2Node_DynamicCast_AsBPI_Pivot_Action;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPivotAlpha_Alpha;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_GetMaxPivotAlpha) == 0x000008, "Wrong alignment on Mod_Turnstile_C_GetMaxPivotAlpha");
static_assert(sizeof(Mod_Turnstile_C_GetMaxPivotAlpha) == 0x000058, "Wrong size on Mod_Turnstile_C_GetMaxPivotAlpha");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, Alpha) == 0x000000, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::Alpha' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, LocalAlpha) == 0x000008, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::LocalAlpha' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, CallFunc_Array_Get_Item) == 0x000020, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, K2Node_DynamicCast_AsBPI_Pivot_Action) == 0x000030, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::K2Node_DynamicCast_AsBPI_Pivot_Action' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, CallFunc_GetPivotAlpha_Alpha) == 0x000048, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::CallFunc_GetPivotAlpha_Alpha' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMaxPivotAlpha, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'Mod_Turnstile_C_GetMaxPivotAlpha::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.GetMinPivotAlpha
// 0x0058 (0x0058 - 0x0000)
struct Mod_Turnstile_C_GetMinPivotAlpha final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalAlpha;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PivotAction_C>    K2Node_DynamicCast_AsBPI_Pivot_Action;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPivotAlpha_Alpha;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_GetMinPivotAlpha) == 0x000008, "Wrong alignment on Mod_Turnstile_C_GetMinPivotAlpha");
static_assert(sizeof(Mod_Turnstile_C_GetMinPivotAlpha) == 0x000058, "Wrong size on Mod_Turnstile_C_GetMinPivotAlpha");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, Alpha) == 0x000000, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::Alpha' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, LocalAlpha) == 0x000008, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::LocalAlpha' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, CallFunc_Array_Get_Item) == 0x000020, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, K2Node_DynamicCast_AsBPI_Pivot_Action) == 0x000030, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::K2Node_DynamicCast_AsBPI_Pivot_Action' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, CallFunc_GetPivotAlpha_Alpha) == 0x000048, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::CallFunc_GetPivotAlpha_Alpha' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_GetMinPivotAlpha, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'Mod_Turnstile_C_GetMinPivotAlpha::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.IsSomeoneInside
// 0x0040 (0x0040 - 0x0000)
struct Mod_Turnstile_C_IsSomeoneInside final
{
public:
	TArray<class UBoxComponent*>                  Boxes;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_IsSomeoneInside) == 0x000008, "Wrong alignment on Mod_Turnstile_C_IsSomeoneInside");
static_assert(sizeof(Mod_Turnstile_C_IsSomeoneInside) == 0x000040, "Wrong size on Mod_Turnstile_C_IsSomeoneInside");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, Boxes) == 0x000000, "Member 'Mod_Turnstile_C_IsSomeoneInside::Boxes' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, ReturnValue) == 0x000010, "Member 'Mod_Turnstile_C_IsSomeoneInside::ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'Mod_Turnstile_C_IsSomeoneInside::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Mod_Turnstile_C_IsSomeoneInside::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'Mod_Turnstile_C_IsSomeoneInside::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, CallFunc_Array_Get_Item) == 0x000020, "Member 'Mod_Turnstile_C_IsSomeoneInside::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000028, "Member 'Mod_Turnstile_C_IsSomeoneInside::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Mod_Turnstile_C_IsSomeoneInside::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, CallFunc_Array_IsEmpty_ReturnValue) == 0x000039, "Member 'Mod_Turnstile_C_IsSomeoneInside::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_IsSomeoneInside, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'Mod_Turnstile_C_IsSomeoneInside::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.MakeNewAxis
// 0x0080 (0x0080 - 0x0000)
struct Mod_Turnstile_C_MakeNewAxis final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PivotAction_C>    K2Node_DynamicCast_AsBPI_Pivot_Action;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPivotAlpha_Alpha;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_MakeNewAxis) == 0x000008, "Wrong alignment on Mod_Turnstile_C_MakeNewAxis");
static_assert(sizeof(Mod_Turnstile_C_MakeNewAxis) == 0x000080, "Wrong size on Mod_Turnstile_C_MakeNewAxis");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_Array_Get_Item) == 0x000008, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, K2Node_DynamicCast_AsBPI_Pivot_Action) == 0x000018, "Member 'Mod_Turnstile_C_MakeNewAxis::K2Node_DynamicCast_AsBPI_Pivot_Action' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Mod_Turnstile_C_MakeNewAxis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_GetPivotAlpha_Alpha) == 0x000030, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_GetPivotAlpha_Alpha' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000038, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_BreakVector_X) == 0x000050, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_BreakVector_Y) == 0x000058, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_BreakVector_Z) == 0x000060, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_MakeNewAxis, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Mod_Turnstile_C_MakeNewAxis::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Mod_Turnstile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_ReceiveTick) == 0x000004, "Wrong alignment on Mod_Turnstile_C_ReceiveTick");
static_assert(sizeof(Mod_Turnstile_C_ReceiveTick) == 0x000004, "Wrong size on Mod_Turnstile_C_ReceiveTick");
static_assert(offsetof(Mod_Turnstile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Mod_Turnstile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.RemoveActorToTrigger
// 0x0008 (0x0008 - 0x0000)
struct Mod_Turnstile_C_RemoveActorToTrigger final
{
public:
	int64                                         ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_RemoveActorToTrigger) == 0x000008, "Wrong alignment on Mod_Turnstile_C_RemoveActorToTrigger");
static_assert(sizeof(Mod_Turnstile_C_RemoveActorToTrigger) == 0x000008, "Wrong size on Mod_Turnstile_C_RemoveActorToTrigger");
static_assert(offsetof(Mod_Turnstile_C_RemoveActorToTrigger, ID) == 0x000000, "Member 'Mod_Turnstile_C_RemoveActorToTrigger::ID' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.ReplicateInteractionAll
// 0x0008 (0x0008 - 0x0000)
struct Mod_Turnstile_C_ReplicateInteractionAll final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_ReplicateInteractionAll) == 0x000008, "Wrong alignment on Mod_Turnstile_C_ReplicateInteractionAll");
static_assert(sizeof(Mod_Turnstile_C_ReplicateInteractionAll) == 0x000008, "Wrong size on Mod_Turnstile_C_ReplicateInteractionAll");
static_assert(offsetof(Mod_Turnstile_C_ReplicateInteractionAll, Axis) == 0x000000, "Member 'Mod_Turnstile_C_ReplicateInteractionAll::Axis' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.TryReferenceActors
// 0x0098 (0x0098 - 0x0000)
struct Mod_Turnstile_C_TryReferenceActors final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           CallFunc_GetModButtonClasses_ClassesOut;           // 0x0020(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0038(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlacableByID_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetPlacableByID_Actor;                    // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_TryReferenceActors) == 0x000008, "Wrong alignment on Mod_Turnstile_C_TryReferenceActors");
static_assert(sizeof(Mod_Turnstile_C_TryReferenceActors) == 0x000098, "Wrong size on Mod_Turnstile_C_TryReferenceActors");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, Success) == 0x000000, "Member 'Mod_Turnstile_C_TryReferenceActors::Success' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Mod_Turnstile_C_TryReferenceActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'Mod_Turnstile_C_TryReferenceActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'Mod_Turnstile_C_TryReferenceActors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_GetModButtonClasses_ClassesOut) == 0x000020, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_GetModButtonClasses_ClassesOut' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'Mod_Turnstile_C_TryReferenceActors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Array_Get_Item) == 0x000038, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Array_Length_ReturnValue_2) == 0x000064, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_GetPlacableByID_ReturnValue) == 0x000078, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_GetPlacableByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_GetPlacableByID_Actor) == 0x000080, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_GetPlacableByID_Actor' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Array_Length_ReturnValue_3) == 0x000088, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_TryReferenceActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'Mod_Turnstile_C_TryReferenceActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.UpdateActorToInteractWith
// 0x0028 (0x0028 - 0x0000)
struct Mod_Turnstile_C_UpdateActorToInteractWith final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PivotAction_C>    K2Node_DynamicCast_AsBPI_Pivot_Action;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_UpdateActorToInteractWith) == 0x000008, "Wrong alignment on Mod_Turnstile_C_UpdateActorToInteractWith");
static_assert(sizeof(Mod_Turnstile_C_UpdateActorToInteractWith) == 0x000028, "Wrong size on Mod_Turnstile_C_UpdateActorToInteractWith");
static_assert(offsetof(Mod_Turnstile_C_UpdateActorToInteractWith, Axis) == 0x000000, "Member 'Mod_Turnstile_C_UpdateActorToInteractWith::Axis' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UpdateActorToInteractWith, Target) == 0x000008, "Member 'Mod_Turnstile_C_UpdateActorToInteractWith::Target' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UpdateActorToInteractWith, K2Node_DynamicCast_AsBPI_Pivot_Action) == 0x000010, "Member 'Mod_Turnstile_C_UpdateActorToInteractWith::K2Node_DynamicCast_AsBPI_Pivot_Action' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UpdateActorToInteractWith, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Mod_Turnstile_C_UpdateActorToInteractWith::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.UpdateTurn
// 0x0048 (0x0048 - 0x0000)
struct Mod_Turnstile_C_UpdateTurn final
{
public:
	double                                        TurnRate_0;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewLocalVar;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsSomeoneInside_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsSomeoneInside_ReturnValue_1;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_UpdateTurn) == 0x000008, "Wrong alignment on Mod_Turnstile_C_UpdateTurn");
static_assert(sizeof(Mod_Turnstile_C_UpdateTurn) == 0x000048, "Wrong size on Mod_Turnstile_C_UpdateTurn");
static_assert(offsetof(Mod_Turnstile_C_UpdateTurn, TurnRate_0) == 0x000000, "Member 'Mod_Turnstile_C_UpdateTurn::TurnRate_0' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UpdateTurn, NewLocalVar) == 0x000008, "Member 'Mod_Turnstile_C_UpdateTurn::NewLocalVar' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UpdateTurn, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Mod_Turnstile_C_UpdateTurn::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UpdateTurn, K2Node_MakeArray_Array) == 0x000018, "Member 'Mod_Turnstile_C_UpdateTurn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UpdateTurn, CallFunc_IsSomeoneInside_ReturnValue) == 0x000028, "Member 'Mod_Turnstile_C_UpdateTurn::CallFunc_IsSomeoneInside_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UpdateTurn, K2Node_MakeArray_Array_1) == 0x000030, "Member 'Mod_Turnstile_C_UpdateTurn::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UpdateTurn, CallFunc_IsSomeoneInside_ReturnValue_1) == 0x000040, "Member 'Mod_Turnstile_C_UpdateTurn::CallFunc_IsSomeoneInside_ReturnValue_1' has a wrong offset!");

// Function Mod_Turnstile.Mod_Turnstile_C.UserConstructionScript
// 0x0038 (0x0038 - 0x0000)
struct Mod_Turnstile_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mod_Turnstile_C_UserConstructionScript) == 0x000008, "Wrong alignment on Mod_Turnstile_C_UserConstructionScript");
static_assert(sizeof(Mod_Turnstile_C_UserConstructionScript) == 0x000038, "Wrong size on Mod_Turnstile_C_UserConstructionScript");
static_assert(offsetof(Mod_Turnstile_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Mod_Turnstile_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Mod_Turnstile_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Mod_Turnstile_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000010, "Member 'Mod_Turnstile_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Mod_Turnstile_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000028, "Member 'Mod_Turnstile_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mod_Turnstile_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'Mod_Turnstile_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

