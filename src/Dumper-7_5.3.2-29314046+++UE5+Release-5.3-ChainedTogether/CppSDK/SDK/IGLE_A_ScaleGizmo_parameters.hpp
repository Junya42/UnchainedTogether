#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IGLE_A_ScaleGizmo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "IGLE_E_GizmoSpace_structs.hpp"


namespace SDK::Params
{

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.ExecuteUbergraph_IGLE_A_ScaleGizmo
// 0x04F0 (0x04F0 - 0x0000)
struct IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIGLE_E_GizmoSpace                            K2Node_Event_New_Gizmo_Space;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVectorForHitAxis_ReturnValue;   // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AIGLE_A_Gizmo_C*                        K2Node_Event_GizmoOuter;                           // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ViewSpaceScanLine_Start;                  // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ViewSpaceScanLine_End;                    // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_OptimalPlaneNormalForCameraAndHitAxis_PlaneNormal; // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinePlaneIntersection_OriginNormal_T;     // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_LinePlaneIntersection_OriginNormal_Intersection; // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue; // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetIGLECursorPosition_LocationX___X_;     // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetIGLECursorPosition_LocationY___Y_;     // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SnapDeltaScale_ResultDeltaScale;          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0480(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_Select_Default_1;                           // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_Select_Default_2;                           // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_Select_Default_3;                           // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo) == 0x000008, "Wrong alignment on IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo");
static_assert(sizeof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo) == 0x0004F0, "Wrong size on IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, EntryPoint) == 0x000000, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::EntryPoint' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, Temp_bool_Variable) == 0x000004, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, K2Node_Event_New_Gizmo_Space) == 0x000007, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::K2Node_Event_New_Gizmo_Space' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, Temp_real_Variable) == 0x000008, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_bBlockingHit) == 0x000028, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_bInitialOverlap) == 0x000029, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Time) == 0x00002C, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Distance) == 0x000030, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Location) == 0x000038, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_ImpactPoint) == 0x000050, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Normal) == 0x000068, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_ImpactNormal) == 0x000080, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_PhysMat) == 0x000098, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitActor) == 0x0000A0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitComponent) == 0x0000A8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitBoneName) == 0x0000B0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_BoneName) == 0x0000B8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitItem) == 0x0000C0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_ElementIndex) == 0x0000C4, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_FaceIndex) == 0x0000C8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_TraceStart) == 0x0000D0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_TraceEnd) == 0x0000E8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000100, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000101, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Time_1) == 0x000104, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Distance_1) == 0x000108, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Location_1) == 0x000110, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000128, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Normal_1) == 0x000140, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000158, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_PhysMat_1) == 0x000170, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitActor_1) == 0x000178, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitComponent_1) == 0x000180, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitBoneName_1) == 0x000188, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_BoneName_1) == 0x000190, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitItem_1) == 0x000198, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_ElementIndex_1) == 0x00019C, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_FaceIndex_1) == 0x0001A0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_TraceStart_1) == 0x0001A8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_TraceEnd_1) == 0x0001C0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001D8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001D9, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_GetForwardVectorForHitAxis_ReturnValue) == 0x0001E0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_GetForwardVectorForHitAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_GetUpVector_ReturnValue) == 0x0001F8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_SelectVector_ReturnValue) == 0x000210, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000228, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000230, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000248, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000249, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Time_2) == 0x00024C, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Distance_2) == 0x000250, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Location_2) == 0x000258, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000270, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_Normal_2) == 0x000288, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0002A0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_PhysMat_2) == 0x0002B8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitActor_2) == 0x0002C0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitComponent_2) == 0x0002C8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitBoneName_2) == 0x0002D0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_BoneName_2) == 0x0002D8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_HitItem_2) == 0x0002E0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_ElementIndex_2) == 0x0002E4, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_FaceIndex_2) == 0x0002E8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_TraceStart_2) == 0x0002F0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakHitResult_TraceEnd_2) == 0x000308, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_IsValid_ReturnValue) == 0x000320, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, K2Node_Event_GizmoOuter) == 0x000328, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::K2Node_Event_GizmoOuter' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, Temp_bool_Variable_1) == 0x000330, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_ViewSpaceScanLine_Start) == 0x000338, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_ViewSpaceScanLine_Start' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_ViewSpaceScanLine_End) == 0x000350, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_ViewSpaceScanLine_End' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_GetForwardVector_ReturnValue) == 0x000368, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_OptimalPlaneNormalForCameraAndHitAxis_PlaneNormal) == 0x000380, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_OptimalPlaneNormalForCameraAndHitAxis_PlaneNormal' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_GetActorScale3D_ReturnValue) == 0x000398, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_LinePlaneIntersection_OriginNormal_T) == 0x0003B0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_LinePlaneIntersection_OriginNormal_T' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_LinePlaneIntersection_OriginNormal_Intersection) == 0x0003B8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_LinePlaneIntersection_OriginNormal_Intersection' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue) == 0x0003D0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0003D8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0003F0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000408, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Dot_VectorVector_ReturnValue) == 0x000420, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000428, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_GetIGLECursorPosition_LocationX___X_) == 0x000430, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_GetIGLECursorPosition_LocationX___X_' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_GetIGLECursorPosition_LocationY___Y_) == 0x000438, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_GetIGLECursorPosition_LocationY___Y_' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_SnapDeltaScale_ResultDeltaScale) == 0x000440, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_SnapDeltaScale_ResultDeltaScale' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_MakeVector2D_ReturnValue) == 0x000448, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000458, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_FMax_ReturnValue) == 0x000460, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000468, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000480, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_Add_VectorVector_ReturnValue) == 0x000490, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakVector2D_X) == 0x0004A8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_BreakVector2D_Y) == 0x0004B0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, Temp_bool_Variable_2) == 0x0004B8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, K2Node_Select_Default) == 0x0004C0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0004C8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, Temp_bool_Variable_3) == 0x0004C9, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, K2Node_Select_Default_1) == 0x0004D0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, K2Node_Select_Default_2) == 0x0004D8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, K2Node_Select_Default_3) == 0x0004E0, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0004E8, "Member 'IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.GenerateGizmo
// 0x0008 (0x0008 - 0x0000)
struct IGLE_A_ScaleGizmo_C_GenerateGizmo final
{
public:
	class AIGLE_A_Gizmo_C*                        GizmoOuter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_A_ScaleGizmo_C_GenerateGizmo) == 0x000008, "Wrong alignment on IGLE_A_ScaleGizmo_C_GenerateGizmo");
static_assert(sizeof(IGLE_A_ScaleGizmo_C_GenerateGizmo) == 0x000008, "Wrong size on IGLE_A_ScaleGizmo_C_GenerateGizmo");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GenerateGizmo, GizmoOuter) == 0x000000, "Member 'IGLE_A_ScaleGizmo_C_GenerateGizmo::GizmoOuter' has a wrong offset!");

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.GenerateScaleGizmo
// 0x0030 (0x0030 - 0x0000)
struct IGLE_A_ScaleGizmo_C_GenerateScaleGizmo final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_IGLE_ObjectTypeQueryToCollisionChannel_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_A_ScaleGizmo_C_GenerateScaleGizmo) == 0x000008, "Wrong alignment on IGLE_A_ScaleGizmo_C_GenerateScaleGizmo");
static_assert(sizeof(IGLE_A_ScaleGizmo_C_GenerateScaleGizmo) == 0x000030, "Wrong size on IGLE_A_ScaleGizmo_C_GenerateScaleGizmo");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GenerateScaleGizmo, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'IGLE_A_ScaleGizmo_C_GenerateScaleGizmo::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GenerateScaleGizmo, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'IGLE_A_ScaleGizmo_C_GenerateScaleGizmo::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GenerateScaleGizmo, CallFunc_IGLE_ObjectTypeQueryToCollisionChannel_ReturnValue) == 0x000010, "Member 'IGLE_A_ScaleGizmo_C_GenerateScaleGizmo::CallFunc_IGLE_ObjectTypeQueryToCollisionChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GenerateScaleGizmo, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000018, "Member 'IGLE_A_ScaleGizmo_C_GenerateScaleGizmo::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GenerateScaleGizmo, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000020, "Member 'IGLE_A_ScaleGizmo_C_GenerateScaleGizmo::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GenerateScaleGizmo, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000028, "Member 'IGLE_A_ScaleGizmo_C_GenerateScaleGizmo::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.GetForwardVectorForHitAxis
// 0x00B0 (0x00B0 - 0x0000)
struct IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis final
{
public:
	class UPrimitiveComponent*                    InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_2;                            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis) == 0x000008, "Wrong alignment on IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis");
static_assert(sizeof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis) == 0x0000B0, "Wrong size on IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, InputPin) == 0x000000, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::InputPin' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, ReturnValue) == 0x000008, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, Temp_bool_Variable) == 0x000020, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, Temp_struct_Variable) == 0x000028, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, Temp_struct_Variable_1) == 0x000040, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, Temp_bool_Variable_1) == 0x000058, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, Temp_struct_Variable_2) == 0x000060, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000079, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, K2Node_Select_Default) == 0x000080, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis, K2Node_Select_Default_1) == 0x000098, "Member 'IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis::K2Node_Select_Default_1' has a wrong offset!");

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.OptimalCrossProductForCamera
// 0x00F0 (0x00F0 - 0x0000)
struct IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera final
{
public:
	struct FVector                                BaseAxisForward;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TestAForward;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TestBForward;                                      // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraForward;                                     // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OptimalCrossBetweenBaseAndTest;                    // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera) == 0x000008, "Wrong alignment on IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera");
static_assert(sizeof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera) == 0x0000F0, "Wrong size on IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, BaseAxisForward) == 0x000000, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::BaseAxisForward' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, TestAForward) == 0x000018, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::TestAForward' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, TestBForward) == 0x000030, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::TestBForward' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, CameraForward) == 0x000048, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::CameraForward' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, OptimalCrossBetweenBaseAndTest) == 0x000060, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::OptimalCrossBetweenBaseAndTest' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, Temp_bool_Variable) == 0x000078, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, CallFunc_Cross_VectorVector_ReturnValue) == 0x000080, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000098, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000B0, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, CallFunc_Abs_ReturnValue) == 0x0000C0, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, CallFunc_Abs_ReturnValue_1) == 0x0000C8, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera, K2Node_Select_Default) == 0x0000D8, "Member 'IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera::K2Node_Select_Default' has a wrong offset!");

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.OptimalPlaneNormalForCameraAndHitAxis
// 0x0190 (0x0190 - 0x0000)
struct IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraDir;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlaneNormal;                                       // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComp;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalCameraDir;                                    // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue_2;                // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_3;                // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_4;                // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_OptimalCrossProductForCamera_OptimalCrossBetweenBaseAndTest; // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_5;                // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_6;                // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_7;                // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_OptimalCrossProductForCamera_OptimalCrossBetweenBaseAndTest_1; // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_8;                // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_OptimalCrossProductForCamera_OptimalCrossBetweenBaseAndTest_2; // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis) == 0x000008, "Wrong alignment on IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis");
static_assert(sizeof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis) == 0x000190, "Wrong size on IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, HitComponent) == 0x000000, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::HitComponent' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CameraDir) == 0x000008, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CameraDir' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, PlaneNormal) == 0x000020, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::PlaneNormal' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, HitComp) == 0x000038, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::HitComp' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, LocalCameraDir) == 0x000040, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::LocalCameraDir' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_GetUpVector_ReturnValue) == 0x000060, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_GetUpVector_ReturnValue_1) == 0x000078, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000090, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000091, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_GetUpVector_ReturnValue_2) == 0x000098, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_GetUpVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_GetUpVector_ReturnValue_3) == 0x0000B0, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_GetUpVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_GetUpVector_ReturnValue_4) == 0x0000C8, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_GetUpVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_OptimalCrossProductForCamera_OptimalCrossBetweenBaseAndTest) == 0x0000E0, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_OptimalCrossProductForCamera_OptimalCrossBetweenBaseAndTest' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_GetUpVector_ReturnValue_5) == 0x0000F8, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_GetUpVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_GetUpVector_ReturnValue_6) == 0x000110, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_GetUpVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_GetUpVector_ReturnValue_7) == 0x000128, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_GetUpVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_OptimalCrossProductForCamera_OptimalCrossBetweenBaseAndTest_1) == 0x000140, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_OptimalCrossProductForCamera_OptimalCrossBetweenBaseAndTest_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_GetUpVector_ReturnValue_8) == 0x000158, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_GetUpVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000170, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis, CallFunc_OptimalCrossProductForCamera_OptimalCrossBetweenBaseAndTest_2) == 0x000178, "Member 'IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis::CallFunc_OptimalCrossProductForCamera_OptimalCrossBetweenBaseAndTest_2' has a wrong offset!");

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.OrientScaleArrows
// 0x0438 (0x0438 - 0x0000)
struct IGLE_A_ScaleGizmo_C_OrientScaleArrows final
{
public:
	struct FRotator                               WorldRotation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_1;               // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_2;               // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_3;               // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_4;               // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_IGLE_DeltaRotator_ReturnValue;            // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_IGLE_DeltaRotator_ReturnValue_1;          // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0138(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0220(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_5;               // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_IGLE_DeltaRotator_ReturnValue_2;          // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x0350(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(IGLE_A_ScaleGizmo_C_OrientScaleArrows) == 0x000008, "Wrong alignment on IGLE_A_ScaleGizmo_C_OrientScaleArrows");
static_assert(sizeof(IGLE_A_ScaleGizmo_C_OrientScaleArrows) == 0x000438, "Wrong size on IGLE_A_ScaleGizmo_C_OrientScaleArrows");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, WorldRotation) == 0x000000, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::WorldRotation' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_GetAxes_X) == 0x000018, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_GetAxes_Y) == 0x000030, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_GetAxes_Z) == 0x000048, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_MakeRotFromZ_ReturnValue) == 0x000060, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_MakeRotFromZ_ReturnValue_1) == 0x000078, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_MakeRotFromZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_MakeRotFromZ_ReturnValue_2) == 0x000090, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_MakeRotFromZ_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_MakeVector_ReturnValue_1) == 0x0000C0, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_MakeRotFromZ_ReturnValue_3) == 0x0000D8, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_MakeRotFromZ_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_MakeRotFromZ_ReturnValue_4) == 0x0000F0, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_MakeRotFromZ_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_IGLE_DeltaRotator_ReturnValue) == 0x000108, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_IGLE_DeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_IGLE_DeltaRotator_ReturnValue_1) == 0x000120, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_IGLE_DeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000138, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000220, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_MakeVector_ReturnValue_2) == 0x000308, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_MakeRotFromZ_ReturnValue_5) == 0x000320, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_MakeRotFromZ_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_IGLE_DeltaRotator_ReturnValue_2) == 0x000338, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_IGLE_DeltaRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_OrientScaleArrows, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x000350, "Member 'IGLE_A_ScaleGizmo_C_OrientScaleArrows::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.SnapDeltaScale
// 0x0030 (0x0030 - 0x0000)
struct IGLE_A_ScaleGizmo_C_SnapDeltaScale final
{
public:
	double                                        DeltaScale;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResultDeltaScale;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldSnapForMode_ShouldSnap;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_A_ScaleGizmo_C_SnapDeltaScale) == 0x000008, "Wrong alignment on IGLE_A_ScaleGizmo_C_SnapDeltaScale");
static_assert(sizeof(IGLE_A_ScaleGizmo_C_SnapDeltaScale) == 0x000030, "Wrong size on IGLE_A_ScaleGizmo_C_SnapDeltaScale");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_SnapDeltaScale, DeltaScale) == 0x000000, "Member 'IGLE_A_ScaleGizmo_C_SnapDeltaScale::DeltaScale' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_SnapDeltaScale, ResultDeltaScale) == 0x000008, "Member 'IGLE_A_ScaleGizmo_C_SnapDeltaScale::ResultDeltaScale' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_SnapDeltaScale, Temp_bool_Variable) == 0x000010, "Member 'IGLE_A_ScaleGizmo_C_SnapDeltaScale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_SnapDeltaScale, CallFunc_ShouldSnapForMode_ShouldSnap) == 0x000011, "Member 'IGLE_A_ScaleGizmo_C_SnapDeltaScale::CallFunc_ShouldSnapForMode_ShouldSnap' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_SnapDeltaScale, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'IGLE_A_ScaleGizmo_C_SnapDeltaScale::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_SnapDeltaScale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'IGLE_A_ScaleGizmo_C_SnapDeltaScale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_SnapDeltaScale, K2Node_Select_Default) == 0x000028, "Member 'IGLE_A_ScaleGizmo_C_SnapDeltaScale::K2Node_Select_Default' has a wrong offset!");

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.UpdateGizmoSpace
// 0x0001 (0x0001 - 0x0000)
struct IGLE_A_ScaleGizmo_C_UpdateGizmoSpace final
{
public:
	EIGLE_E_GizmoSpace                            New_Gizmo_Space;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IGLE_A_ScaleGizmo_C_UpdateGizmoSpace) == 0x000001, "Wrong alignment on IGLE_A_ScaleGizmo_C_UpdateGizmoSpace");
static_assert(sizeof(IGLE_A_ScaleGizmo_C_UpdateGizmoSpace) == 0x000001, "Wrong size on IGLE_A_ScaleGizmo_C_UpdateGizmoSpace");
static_assert(offsetof(IGLE_A_ScaleGizmo_C_UpdateGizmoSpace, New_Gizmo_Space) == 0x000000, "Member 'IGLE_A_ScaleGizmo_C_UpdateGizmoSpace::New_Gizmo_Space' has a wrong offset!");

}

