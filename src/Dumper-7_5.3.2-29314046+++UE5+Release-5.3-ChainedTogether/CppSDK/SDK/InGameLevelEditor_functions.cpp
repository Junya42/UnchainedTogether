#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGameLevelEditor

#include "Basic.hpp"

#include "InGameLevelEditor_classes.hpp"
#include "InGameLevelEditor_parameters.hpp"


namespace SDK
{

// Function InGameLevelEditor.IGLE_ActionBufferObject.GetFriendlyActionName
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           OutName                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_ActionBufferObject::GetFriendlyActionName(class FString* OutName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_ActionBufferObject", "GetFriendlyActionName");

	Params::IGLE_ActionBufferObject_GetFriendlyActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);
}


// Function InGameLevelEditor.IGLE_ActionBufferObject.Initialize
// (Native, Event, Public, BlueprintEvent)

void UIGLE_ActionBufferObject::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_ActionBufferObject", "Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_ActionBufferObject.RedoAction
// (Native, Event, Public, BlueprintEvent)

void UIGLE_ActionBufferObject::RedoAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_ActionBufferObject", "RedoAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_ActionBufferObject.UndoAction
// (Native, Event, Public, BlueprintEvent)

void UIGLE_ActionBufferObject::UndoAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_ActionBufferObject", "UndoAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_AsyncRegisterPlacables.AsyncRegisterPlacables
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ContentPaths                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    DeferDestruction                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UIGLE_AsyncRegisterPlacables*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UIGLE_AsyncRegisterPlacables* UIGLE_AsyncRegisterPlacables::AsyncRegisterPlacables(const class UObject* WorldContextObject, const TArray<class FString>& ContentPaths, bool DeferDestruction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_AsyncRegisterPlacables", "AsyncRegisterPlacables");

	Params::IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContentPaths = std::move(ContentPaths);
	Parms.DeferDestruction = DeferDestruction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_BytesToLevelSave
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           LevelSaveBytes                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FIGLELevelSave                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FIGLELevelSave UIGLE_FL::IGLE_BytesToLevelSave(const TArray<uint8>& LevelSaveBytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_BytesToLevelSave");

	Params::IGLE_FL_IGLE_BytesToLevelSave Parms{};

	Parms.LevelSaveBytes = std::move(LevelSaveBytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_BytesToTransform
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<uint8>                           Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UIGLE_FL::IGLE_BytesToTransform(const TArray<uint8>& Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_BytesToTransform");

	Params::IGLE_FL_IGLE_BytesToTransform Parms{};

	Parms.Bytes = std::move(Bytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_CallInitializeForActionBufferObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UIGLE_ActionBufferObject*         ActionBufferObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_CallInitializeForActionBufferObject(class UIGLE_ActionBufferObject* ActionBufferObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_CallInitializeForActionBufferObject");

	Params::IGLE_FL_IGLE_CallInitializeForActionBufferObject Parms{};

	Parms.ActionBufferObject = ActionBufferObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_CallRedoForActionBufferObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UIGLE_ActionBufferObject*         ActionBufferObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_CallRedoForActionBufferObject(class UIGLE_ActionBufferObject* ActionBufferObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_CallRedoForActionBufferObject");

	Params::IGLE_FL_IGLE_CallRedoForActionBufferObject Parms{};

	Parms.ActionBufferObject = ActionBufferObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_CallUndoForActionBufferObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UIGLE_ActionBufferObject*         ActionBufferObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_CallUndoForActionBufferObject(class UIGLE_ActionBufferObject* ActionBufferObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_CallUndoForActionBufferObject");

	Params::IGLE_FL_IGLE_CallUndoForActionBufferObject Parms{};

	Parms.ActionBufferObject = ActionBufferObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_ClassToString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                           Class_0                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UIGLE_FL::IGLE_ClassToString(class UClass* Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_ClassToString");

	Params::IGLE_FL_IGLE_ClassToString Parms{};

	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_CreateDir
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           RelativeGameDirectory                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_CreateDir(const class FString& RelativeGameDirectory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_CreateDir");

	Params::IGLE_FL_IGLE_CreateDir Parms{};

	Parms.RelativeGameDirectory = std::move(RelativeGameDirectory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_CreatePlacableSave
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           PlacableActorTarget                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIGLEPlacableSave                OutSave                                                (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGLE_FL::IGLE_CreatePlacableSave(class AActor* PlacableActorTarget, struct FIGLEPlacableSave* OutSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_CreatePlacableSave");

	Params::IGLE_FL_IGLE_CreatePlacableSave Parms{};

	Parms.PlacableActorTarget = PlacableActorTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSave != nullptr)
		*OutSave = std::move(Parms.OutSave);

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_DeltaRotator
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                         A                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         B                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UIGLE_FL::IGLE_DeltaRotator(const struct FRotator& A, const struct FRotator& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_DeltaRotator");

	Params::IGLE_FL_IGLE_DeltaRotator Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_DeprojectScreenToWorld
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        RelativeViewportPos                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox2D                           Viewport                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          ViewMatrix                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          ProjectionMatrix                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldDirection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_DeprojectScreenToWorld(const struct FVector2D& RelativeViewportPos, const struct FBox2D& Viewport, const struct FMatrix& ViewMatrix, const struct FMatrix& ProjectionMatrix, struct FVector* WorldPosition, struct FVector* WorldDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_DeprojectScreenToWorld");

	Params::IGLE_FL_IGLE_DeprojectScreenToWorld Parms{};

	Parms.RelativeViewportPos = std::move(RelativeViewportPos);
	Parms.Viewport = std::move(Viewport);
	Parms.ViewMatrix = std::move(ViewMatrix);
	Parms.ProjectionMatrix = std::move(ProjectionMatrix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WorldPosition != nullptr)
		*WorldPosition = std::move(Parms.WorldPosition);

	if (WorldDirection != nullptr)
		*WorldDirection = std::move(Parms.WorldDirection);
}


// Function InGameLevelEditor.IGLE_FL.IGLE_DeserializeObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_DeserializeObject(class UObject* Object, const TArray<uint8>& Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_DeserializeObject");

	Params::IGLE_FL_IGLE_DeserializeObject Parms{};

	Parms.Object = Object;
	Parms.Bytes = std::move(Bytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_GetActorReference
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIGLEActorReference              Reference                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UIGLE_FL::IGLE_GetActorReference(class UObject* WorldContextObject, const struct FIGLEActorReference& Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_GetActorReference");

	Params::IGLE_FL_IGLE_GetActorReference Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Reference = std::move(Reference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_GetAllSubdirectories
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           RelativeGameDirectory                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UIGLE_FL::IGLE_GetAllSubdirectories(const class FString& RelativeGameDirectory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_GetAllSubdirectories");

	Params::IGLE_FL_IGLE_GetAllSubdirectories Parms{};

	Parms.RelativeGameDirectory = std::move(RelativeGameDirectory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_GetConstrainedViewRectangle
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox2D                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox2D UIGLE_FL::IGLE_GetConstrainedViewRectangle(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_GetConstrainedViewRectangle");

	Params::IGLE_FL_IGLE_GetConstrainedViewRectangle Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_GetFilesWithExtension
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           RelativeGameDirectory                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Extension                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UIGLE_FL::IGLE_GetFilesWithExtension(const class FString& RelativeGameDirectory, const class FString& Extension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_GetFilesWithExtension");

	Params::IGLE_FL_IGLE_GetFilesWithExtension Parms{};

	Parms.RelativeGameDirectory = std::move(RelativeGameDirectory);
	Parms.Extension = std::move(Extension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_IsObjectTransactionalAndTransient
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGLE_FL::IGLE_IsObjectTransactionalAndTransient(const class UObject* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_IsObjectTransactionalAndTransient");

	Params::IGLE_FL_IGLE_IsObjectTransactionalAndTransient Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_LevelSaveToBytes
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FIGLELevelSave                   LevelSave                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UIGLE_FL::IGLE_LevelSaveToBytes(const struct FIGLELevelSave& LevelSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_LevelSaveToBytes");

	Params::IGLE_FL_IGLE_LevelSaveToBytes Parms{};

	Parms.LevelSave = std::move(LevelSave);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_LoadPlacableSave
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIGLEPlacableSave                SaveToLoad                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UIGLE_FL::IGLE_LoadPlacableSave(class UObject* WorldContextObject, const struct FIGLEPlacableSave& SaveToLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_LoadPlacableSave");

	Params::IGLE_FL_IGLE_LoadPlacableSave Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SaveToLoad = std::move(SaveToLoad);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_MakeActorReference
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIGLEActorReference              Reference                                              (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGLE_FL::IGLE_MakeActorReference(class AActor* Actor, struct FIGLEActorReference* Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_MakeActorReference");

	Params::IGLE_FL_IGLE_MakeActorReference Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Reference != nullptr)
		*Reference = std::move(Parms.Reference);

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_MakeCustomProjectionMatrix
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ViewportSize                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FOV                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NearPlane                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FarPlane                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InverseZMatrix                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NoFarPlane                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UIGLE_FL::IGLE_MakeCustomProjectionMatrix(const struct FVector2D& ViewportSize, float FOV, float NearPlane, float FarPlane, bool InverseZMatrix, bool NoFarPlane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_MakeCustomProjectionMatrix");

	Params::IGLE_FL_IGLE_MakeCustomProjectionMatrix Parms{};

	Parms.ViewportSize = std::move(ViewportSize);
	Parms.FOV = FOV;
	Parms.NearPlane = NearPlane;
	Parms.FarPlane = FarPlane;
	Parms.InverseZMatrix = InverseZMatrix;
	Parms.NoFarPlane = NoFarPlane;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_MultiplyRotator
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                         A                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         B                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UIGLE_FL::IGLE_MultiplyRotator(const struct FRotator& A, const struct FRotator& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_MultiplyRotator");

	Params::IGLE_FL_IGLE_MultiplyRotator Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_ObjectTypeQueryToCollisionChannel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EObjectTypeQuery                        ObjectTypeQuery                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionChannel                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECollisionChannel UIGLE_FL::IGLE_ObjectTypeQueryToCollisionChannel(EObjectTypeQuery ObjectTypeQuery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_ObjectTypeQueryToCollisionChannel");

	Params::IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel Parms{};

	Parms.ObjectTypeQuery = ObjectTypeQuery;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_ProjectWorldToScreen
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          WorldPos                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox2D                           Viewport                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          ViewMatrix                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          ProjectionMatrix                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        ResultingScreenPos                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_ProjectWorldToScreen(const struct FVector& WorldPos, const struct FBox2D& Viewport, const struct FMatrix& ViewMatrix, const struct FMatrix& ProjectionMatrix, struct FVector2D* ResultingScreenPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_ProjectWorldToScreen");

	Params::IGLE_FL_IGLE_ProjectWorldToScreen Parms{};

	Parms.WorldPos = std::move(WorldPos);
	Parms.Viewport = std::move(Viewport);
	Parms.ViewMatrix = std::move(ViewMatrix);
	Parms.ProjectionMatrix = std::move(ProjectionMatrix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResultingScreenPos != nullptr)
		*ResultingScreenPos = std::move(Parms.ResultingScreenPos);
}


// Function InGameLevelEditor.IGLE_FL.IGLE_RandomInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UIGLE_FL::IGLE_RandomInt64()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_RandomInt64");

	Params::IGLE_FL_IGLE_RandomInt64 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_ReadBytesFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AbsoluteLevelDirectory                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Bytes                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGLE_FL::IGLE_ReadBytesFromFile(const class FString& AbsoluteLevelDirectory, TArray<uint8>* Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_ReadBytesFromFile");

	Params::IGLE_FL_IGLE_ReadBytesFromFile Parms{};

	Parms.AbsoluteLevelDirectory = std::move(AbsoluteLevelDirectory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Bytes != nullptr)
		*Bytes = std::move(Parms.Bytes);

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_SerializeObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UIGLE_FL::IGLE_SerializeObject(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_SerializeObject");

	Params::IGLE_FL_IGLE_SerializeObject Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_SetCullingEnabledForActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    EnableCulling                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_SetCullingEnabledForActor(class AActor* Actor, bool EnableCulling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_SetCullingEnabledForActor");

	Params::IGLE_FL_IGLE_SetCullingEnabledForActor Parms{};

	Parms.Actor = Actor;
	Parms.EnableCulling = EnableCulling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_SetRenderViewport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ShouldRender                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_SetRenderViewport(bool ShouldRender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_SetRenderViewport");

	Params::IGLE_FL_IGLE_SetRenderViewport Parms{};

	Parms.ShouldRender = ShouldRender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_Slerp
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQuat                            A                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            B                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat UIGLE_FL::IGLE_Slerp(const struct FQuat& A, const struct FQuat& B, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_Slerp");

	Params::IGLE_FL_IGLE_Slerp Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_SortStringArrayBySimilarity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           base                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   InputArray                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FStringFloatPair>         OutputArray                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    IgnoreCase                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_SortStringArrayBySimilarity(const class FString& base, const TArray<class FString>& InputArray, TArray<struct FStringFloatPair>* OutputArray, bool IgnoreCase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_SortStringArrayBySimilarity");

	Params::IGLE_FL_IGLE_SortStringArrayBySimilarity Parms{};

	Parms.base = std::move(base);
	Parms.InputArray = std::move(InputArray);
	Parms.IgnoreCase = IgnoreCase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutputArray != nullptr)
		*OutputArray = std::move(Parms.OutputArray);
}


// Function InGameLevelEditor.IGLE_FL.IGLE_StringToClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UIGLE_FL::IGLE_StringToClass(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_StringToClass");

	Params::IGLE_FL_IGLE_StringToClass Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_StringToEnum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UUserDefinedEnum>  EnumClass                                              (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UIGLE_FL::IGLE_StringToEnum(const class FString& String, TSoftObjectPtr<class UUserDefinedEnum> EnumClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_StringToEnum");

	Params::IGLE_FL_IGLE_StringToEnum Parms{};

	Parms.String = std::move(String);
	Parms.EnumClass = EnumClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_SweepActorWithWorld
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETraceTypeQuery                         TraceChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               OutHits                                                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OverrideComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGLE_FL::IGLE_SweepActorWithWorld(class AActor* Target, ETraceTypeQuery TraceChannel, const struct FVector& Start, const struct FVector& End, TArray<struct FHitResult>* OutHits, class UPrimitiveComponent* OverrideComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_SweepActorWithWorld");

	Params::IGLE_FL_IGLE_SweepActorWithWorld Parms{};

	Parms.Target = Target;
	Parms.TraceChannel = TraceChannel;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.OverrideComponent = OverrideComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHits != nullptr)
		*OutHits = std::move(Parms.OutHits);

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_TraceConvex
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  Verticies                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FTransform                       ShapeTransfom                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETraceTypeQuery                         TraceChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ActorsToIgnore                                         (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               OutHits                                                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGLE_FL::IGLE_TraceConvex(class UObject* WorldContextObject, const TArray<struct FVector>& Verticies, const struct FTransform& ShapeTransfom, ETraceTypeQuery TraceChannel, const struct FVector& Start, const struct FVector& End, const TArray<class AActor*>& ActorsToIgnore, TArray<struct FHitResult>* OutHits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_TraceConvex");

	Params::IGLE_FL_IGLE_TraceConvex Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Verticies = std::move(Verticies);
	Parms.ShapeTransfom = std::move(ShapeTransfom);
	Parms.TraceChannel = TraceChannel;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHits != nullptr)
		*OutHits = std::move(Parms.OutHits);

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_TraceTypeQueryToCollisionChannel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETraceTypeQuery                         TraceTypeQuery                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionChannel                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECollisionChannel UIGLE_FL::IGLE_TraceTypeQueryToCollisionChannel(ETraceTypeQuery TraceTypeQuery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_TraceTypeQueryToCollisionChannel");

	Params::IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel Parms{};

	Parms.TraceTypeQuery = TraceTypeQuery;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_TransformToBytes
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform                       Transform                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UIGLE_FL::IGLE_TransformToBytes(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_TransformToBytes");

	Params::IGLE_FL_IGLE_TransformToBytes Parms{};

	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_FL.IGLE_WriteBytesToFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           RelativeGameDirectory                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UIGLE_FL::IGLE_WriteBytesToFile(const class FString& RelativeGameDirectory, const TArray<uint8>& Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IGLE_FL", "IGLE_WriteBytesToFile");

	Params::IGLE_FL_IGLE_WriteBytesToFile Parms{};

	Parms.RelativeGameDirectory = std::move(RelativeGameDirectory);
	Parms.Bytes = std::move(Bytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_InterfaceComponent.CallOnPropertyValueChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_InterfaceComponent::CallOnPropertyValueChanged(const class FString& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_InterfaceComponent", "CallOnPropertyValueChanged");

	Params::IGLE_InterfaceComponent_CallOnPropertyValueChanged Parms{};

	Parms.PropertyName = std::move(PropertyName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_InterfaceComponent.GetPropertyByName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIGLEProperty                    Property                                               (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGLE_InterfaceComponent::GetPropertyByName(const class FString& PropertyName, struct FIGLEProperty* Property)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_InterfaceComponent", "GetPropertyByName");

	Params::IGLE_InterfaceComponent_GetPropertyByName Parms{};

	Parms.PropertyName = std::move(PropertyName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Property != nullptr)
		*Property = std::move(Parms.Property);

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_InterfaceComponent.GetPropertyByValueObject
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UIGLE_PropertyValueObject*        PropertyValueObject                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIGLEProperty                    Property                                               (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGLE_InterfaceComponent::GetPropertyByValueObject(class UIGLE_PropertyValueObject* PropertyValueObject, struct FIGLEProperty* Property)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_InterfaceComponent", "GetPropertyByValueObject");

	Params::IGLE_InterfaceComponent_GetPropertyByValueObject Parms{};

	Parms.PropertyValueObject = PropertyValueObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Property != nullptr)
		*Property = std::move(Parms.Property);

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_InterfaceComponent.GetPropertyValueByName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UIGLE_PropertyValueObject*        Value                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIGLE_InterfaceComponent::GetPropertyValueByName(const class FString& PropertyName, class UIGLE_PropertyValueObject** Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_InterfaceComponent", "GetPropertyValueByName");

	Params::IGLE_InterfaceComponent_GetPropertyValueByName Parms{};

	Parms.PropertyName = std::move(PropertyName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function InGameLevelEditor.IGLE_InterfaceComponent.OnOwnerDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_InterfaceComponent::OnOwnerDestroyed(class AActor* Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_InterfaceComponent", "OnOwnerDestroyed");

	Params::IGLE_InterfaceComponent_OnOwnerDestroyed Parms{};

	Parms.Owner = Owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_InterfaceComponent.SetRuntimeName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewRuntimeName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_InterfaceComponent::SetRuntimeName(const class FString& NewRuntimeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_InterfaceComponent", "SetRuntimeName");

	Params::IGLE_InterfaceComponent_SetRuntimeName Parms{};

	Parms.NewRuntimeName = std::move(NewRuntimeName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_RuntimeSubsystem.RegisterPlacableActorInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FIGLEPlacableActorInfo           Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_RuntimeSubsystem::RegisterPlacableActorInfo(const struct FIGLEPlacableActorInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_RuntimeSubsystem", "RegisterPlacableActorInfo");

	Params::IGLE_RuntimeSubsystem_RegisterPlacableActorInfo Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InGameLevelEditor.IGLE_RuntimeSubsystem.RegisterPlacableActorInfoFromClasses
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ContentPaths                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   TransientActors                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    DeferDestruction                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_RuntimeSubsystem::RegisterPlacableActorInfoFromClasses(const TArray<class FString>& ContentPaths, TArray<class AActor*>* TransientActors, bool DeferDestruction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_RuntimeSubsystem", "RegisterPlacableActorInfoFromClasses");

	Params::IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses Parms{};

	Parms.ContentPaths = std::move(ContentPaths);
	Parms.DeferDestruction = DeferDestruction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TransientActors != nullptr)
		*TransientActors = std::move(Parms.TransientActors);
}


// Function InGameLevelEditor.IGLE_RuntimeSubsystem.RegisterPlacableActorInfoFromDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIGLE_RuntimeSubsystem::RegisterPlacableActorInfoFromDataTable(class UDataTable* DataTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_RuntimeSubsystem", "RegisterPlacableActorInfoFromDataTable");

	Params::IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromDataTable Parms{};

	Parms.DataTable = DataTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

