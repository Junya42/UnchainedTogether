#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IGLE_A_ScaleGizmo

#include "Basic.hpp"

#include "IGLE_A_ScaleGizmo_classes.hpp"
#include "IGLE_A_ScaleGizmo_parameters.hpp"


namespace SDK
{

// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.ExecuteUbergraph_IGLE_A_ScaleGizmo
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIGLE_A_ScaleGizmo_C::ExecuteUbergraph_IGLE_A_ScaleGizmo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "ExecuteUbergraph_IGLE_A_ScaleGizmo");

	Params::IGLE_A_ScaleGizmo_C_ExecuteUbergraph_IGLE_A_ScaleGizmo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.GenerateGizmo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AIGLE_A_Gizmo_C*                  GizmoOuter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AIGLE_A_ScaleGizmo_C::GenerateGizmo(class AIGLE_A_Gizmo_C* GizmoOuter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "GenerateGizmo");

	Params::IGLE_A_ScaleGizmo_C_GenerateGizmo Parms{};

	Parms.GizmoOuter = GizmoOuter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.GenerateScaleGizmo
// (Public, BlueprintCallable, BlueprintEvent)

void AIGLE_A_ScaleGizmo_C::GenerateScaleGizmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "GenerateScaleGizmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.GetForwardVectorForHitAxis
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AIGLE_A_ScaleGizmo_C::GetForwardVectorForHitAxis(class UPrimitiveComponent* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "GetForwardVectorForHitAxis");

	Params::IGLE_A_ScaleGizmo_C_GetForwardVectorForHitAxis Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.OptimalCrossProductForCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          BaseAxisForward                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TestAForward                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TestBForward                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CameraForward                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OptimalCrossBetweenBaseAndTest                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIGLE_A_ScaleGizmo_C::OptimalCrossProductForCamera(const struct FVector& BaseAxisForward, const struct FVector& TestAForward, const struct FVector& TestBForward, const struct FVector& CameraForward, struct FVector* OptimalCrossBetweenBaseAndTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "OptimalCrossProductForCamera");

	Params::IGLE_A_ScaleGizmo_C_OptimalCrossProductForCamera Parms{};

	Parms.BaseAxisForward = std::move(BaseAxisForward);
	Parms.TestAForward = std::move(TestAForward);
	Parms.TestBForward = std::move(TestBForward);
	Parms.CameraForward = std::move(CameraForward);

	UObject::ProcessEvent(Func, &Parms);

	if (OptimalCrossBetweenBaseAndTest != nullptr)
		*OptimalCrossBetweenBaseAndTest = std::move(Parms.OptimalCrossBetweenBaseAndTest);
}


// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.OptimalPlaneNormalForCameraAndHitAxis
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CameraDir                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PlaneNormal                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIGLE_A_ScaleGizmo_C::OptimalPlaneNormalForCameraAndHitAxis(class UPrimitiveComponent* HitComponent, const struct FVector& CameraDir, struct FVector* PlaneNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "OptimalPlaneNormalForCameraAndHitAxis");

	Params::IGLE_A_ScaleGizmo_C_OptimalPlaneNormalForCameraAndHitAxis Parms{};

	Parms.HitComponent = HitComponent;
	Parms.CameraDir = std::move(CameraDir);

	UObject::ProcessEvent(Func, &Parms);

	if (PlaneNormal != nullptr)
		*PlaneNormal = std::move(Parms.PlaneNormal);
}


// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.OrientScaleArrows
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         WorldRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AIGLE_A_ScaleGizmo_C::OrientScaleArrows(const struct FRotator& WorldRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "OrientScaleArrows");

	Params::IGLE_A_ScaleGizmo_C_OrientScaleArrows Parms{};

	Parms.WorldRotation = std::move(WorldRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.SnapDeltaScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  DeltaScale                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ResultDeltaScale                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIGLE_A_ScaleGizmo_C::SnapDeltaScale(double DeltaScale, double* ResultDeltaScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "SnapDeltaScale");

	Params::IGLE_A_ScaleGizmo_C_SnapDeltaScale Parms{};

	Parms.DeltaScale = DeltaScale;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultDeltaScale != nullptr)
		*ResultDeltaScale = Parms.ResultDeltaScale;
}


// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.TickGizmo
// (Public, BlueprintCallable, BlueprintEvent)

void AIGLE_A_ScaleGizmo_C::TickGizmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "TickGizmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IGLE_A_ScaleGizmo.IGLE_A_ScaleGizmo_C.UpdateGizmoSpace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EIGLE_E_GizmoSpace                      New_Gizmo_Space                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIGLE_A_ScaleGizmo_C::UpdateGizmoSpace(EIGLE_E_GizmoSpace New_Gizmo_Space)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IGLE_A_ScaleGizmo_C", "UpdateGizmoSpace");

	Params::IGLE_A_ScaleGizmo_C_UpdateGizmoSpace Parms{};

	Parms.New_Gizmo_Space = New_Gizmo_Space;

	UObject::ProcessEvent(Func, &Parms);
}

}

