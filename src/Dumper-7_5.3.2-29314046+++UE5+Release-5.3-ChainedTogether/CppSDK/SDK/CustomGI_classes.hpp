#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomGI

#include "Basic.hpp"

#include "E_Gamemodes_structs.hpp"
#include "Engine_structs.hpp"
#include "S_BiomeSave_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "V_GameInstanceWithSave_classes.hpp"
#include "AdvancedSessions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CustomGI.CustomGI_C
// 0x0208 (0x04C0 - 0x02B8)
class UCustomGI_C final : public UV_GameInstanceWithSave_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CustomGI_C;                         // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          EnableTestControl;                                 // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameAlreadyLaunched;                               // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayersInSession;                                  // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                VoipManager;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableLevelStreaming;                              // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TestPlayersToSpawn;                                // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DevMode;                                           // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MakeTrueChainVisible;                              // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnWithoutLobby;                                 // 0x02DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalMultiplayerMode;                              // 0x02DB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Version;                                           // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          ShowTraces;                                        // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstPlayerOnKeyboard;                             // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LavaMode;                                          // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F3[0x5];                                      // 0x02F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentServername;                                 // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          HostingOnlineSession;                              // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WingsSelected;                                     // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Gamemodes                                   SelectedGameMode;                                  // 0x030A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OpenedChain;                                       // 0x030B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USG_Progress_C*                         ProgressSave;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ManualSaveFinished;                                // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FS_BiomeSave                           SaveToLoad;                                        // 0x0328(0x0038)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         MaxPlayers;                                        // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InMod;                                             // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EditModLevelPath;                                  // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 UGC_ID;                                            // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnJoinSessionFailed;                               // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         JoinSessionPlayerIndex;                            // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                JoinSessionRef;                                    // 0x03A0(0x0120)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Assign_Controllers_to_Players(int32 ControllersNumber, int32 PlayerNumber);
	void Completed_A8F4B56E4EA2901B0727DEACDC3ECE67(class USaveGame* SaveGame_0, bool bSuccess);
	void Completed_F68F81F54A55E596F9A7118687AB01E9(class USaveGame* SaveGame_0, bool bSuccess);
	void Downloaded(bool Success);
	void ExecuteUbergraph_CustomGI(int32 EntryPoint);
	void GetCollectedWings(TArray<int32>* Wings);
	void GetDevMode(bool* DevMode_0);
	bool GetGameAlreadyLaunched();
	bool GetInputLagMode();
	void GetInstructionsAlreadyShown(bool* Shown);
	void GetLevelStreamingEnabled(bool* Enabled);
	bool GetLocalMultiplayerMode();
	void GetPlayersInSession(int32* PlayersInSession_0);
	void GetTrueChainVisible(bool* Visible);
	void InitProgressSave();
	void IsInMod(bool* Mod);
	void JoinSession();
	void JoinSessionAfterCheckingMods(int32 PlayerIndex, const struct FBlueprintSessionResult& Session);
	void ManualSave(const struct FS_BiomeSave& NewItem);
	void ManualSaveFinished__DelegateSignature(bool Success);
	void OnCallback_D5E80CEA418652AD060EBBB5684EDCE8(const struct FRequestCurrentStatsData& Data, bool bWasSuccessful);
	void OnFailure_B405B95A431214C35278028DA23BF73A();
	void OnJoinSessionFailed__DelegateSignature();
	void OnManualSave(const struct FS_BiomeSave& NewItem);
	void OnSaveBiome(const struct FS_BiomeSave& NewItem);
	void OnSessionInviteAccepted(bool bWasSuccessful, int32 LocalPlayerNum, const class FString& InvitedBy, const struct FBlueprintSessionResult& Session);
	void OnSuccess_B405B95A431214C35278028DA23BF73A();
	void SaveBiomeProgress(const struct FS_BiomeSave& NewItem);
	void SaveProgression(const struct FVector& Location, int32 Time, int32 PlayerNumber, E_Gamemodes Mode);
	void SetCollectedWing(int32 WingIndex);
	void SetGameAlreadyLaunched();
	void SetPlayersInSession(int32 Count);
	void ShowTyroTip();
	void GetTestControl(bool* TestControl);
	void GetTestPlayers(int32* Count);
	void ReceiveInit();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CustomGI_C">();
	}
	static class UCustomGI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomGI_C>();
	}
};
static_assert(alignof(UCustomGI_C) == 0x000008, "Wrong alignment on UCustomGI_C");
static_assert(sizeof(UCustomGI_C) == 0x0004C0, "Wrong size on UCustomGI_C");
static_assert(offsetof(UCustomGI_C, UberGraphFrame_CustomGI_C) == 0x0002B8, "Member 'UCustomGI_C::UberGraphFrame_CustomGI_C' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, EnableTestControl) == 0x0002C0, "Member 'UCustomGI_C::EnableTestControl' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, GameAlreadyLaunched) == 0x0002C1, "Member 'UCustomGI_C::GameAlreadyLaunched' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, PlayersInSession) == 0x0002C4, "Member 'UCustomGI_C::PlayersInSession' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, VoipManager) == 0x0002C8, "Member 'UCustomGI_C::VoipManager' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, EnableLevelStreaming) == 0x0002D0, "Member 'UCustomGI_C::EnableLevelStreaming' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, TestPlayersToSpawn) == 0x0002D4, "Member 'UCustomGI_C::TestPlayersToSpawn' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, DevMode) == 0x0002D8, "Member 'UCustomGI_C::DevMode' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, MakeTrueChainVisible) == 0x0002D9, "Member 'UCustomGI_C::MakeTrueChainVisible' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, SpawnWithoutLobby) == 0x0002DA, "Member 'UCustomGI_C::SpawnWithoutLobby' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, LocalMultiplayerMode) == 0x0002DB, "Member 'UCustomGI_C::LocalMultiplayerMode' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, Version) == 0x0002E0, "Member 'UCustomGI_C::Version' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, ShowTraces) == 0x0002F0, "Member 'UCustomGI_C::ShowTraces' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, FirstPlayerOnKeyboard) == 0x0002F1, "Member 'UCustomGI_C::FirstPlayerOnKeyboard' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, LavaMode) == 0x0002F2, "Member 'UCustomGI_C::LavaMode' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, CurrentServername) == 0x0002F8, "Member 'UCustomGI_C::CurrentServername' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, HostingOnlineSession) == 0x000308, "Member 'UCustomGI_C::HostingOnlineSession' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, WingsSelected) == 0x000309, "Member 'UCustomGI_C::WingsSelected' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, SelectedGameMode) == 0x00030A, "Member 'UCustomGI_C::SelectedGameMode' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, OpenedChain) == 0x00030B, "Member 'UCustomGI_C::OpenedChain' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, ProgressSave) == 0x000310, "Member 'UCustomGI_C::ProgressSave' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, ManualSaveFinished) == 0x000318, "Member 'UCustomGI_C::ManualSaveFinished' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, SaveToLoad) == 0x000328, "Member 'UCustomGI_C::SaveToLoad' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, MaxPlayers) == 0x000360, "Member 'UCustomGI_C::MaxPlayers' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, InMod) == 0x000364, "Member 'UCustomGI_C::InMod' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, EditModLevelPath) == 0x000368, "Member 'UCustomGI_C::EditModLevelPath' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, UGC_ID) == 0x000378, "Member 'UCustomGI_C::UGC_ID' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, OnJoinSessionFailed) == 0x000388, "Member 'UCustomGI_C::OnJoinSessionFailed' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, JoinSessionPlayerIndex) == 0x000398, "Member 'UCustomGI_C::JoinSessionPlayerIndex' has a wrong offset!");
static_assert(offsetof(UCustomGI_C, JoinSessionRef) == 0x0003A0, "Member 'UCustomGI_C::JoinSessionRef' has a wrong offset!");

}

