#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ComboBox_Leaderboard

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Speedrun_IDAndName_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C
// 0x00A8 (0x0368 - 0x02C0)
class UW_ComboBox_Leaderboard_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UComboBoxString*                        ComboBoxString_75;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 SelectedOption;                                    // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UW_ComboChoice_C*>               Choices;                                           // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             OnComboSettingChange;                              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UFont*                                  Font;                                              // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        FontSize;                                          // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMap<class FString, struct FSpeedrun_IDAndName> IDs_and_Names;                                     // 0x0310(0x0050)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UUserWidget*                            Parent;                                            // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void AddOneOption(const class FString& Name_0);
	void AddOptionsOnce(TArray<class FString>& Array);
	void AssignPressEvent(class UW_ComboChoice_Leaderboard_C* ComboChoice);
	void ClearOptions();
	void Construct();
	class FString CropMicrophoneName(const class FString& SourceString);
	void CustomEvent(const class FString& Item, const class FString& ID);
	void ExecuteUbergraph_W_ComboBox_Leaderboard(int32 EntryPoint);
	class FString GetSelectedOption();
	void HasOption(const class FString& Option, bool* TURR);
	void InitColor();
	void LoadDebugSetting(bool Condition);
	void LoadPushToTalkSetting(bool UsePTT);
	void OnComboSettingChange__DelegateSignature(const class FString& NewSelection, ESelectInfo SelectType, const class FString& ID);
	class UWidget* OnGenerateWidget_0(const class FString& Item);
	void Refresh_Audio_Devices(TArray<class FString>& Array, const class FString& ID);
	void RefreshComboBoxContent(const struct FS_ComboBoxContent& Params_0, const class FString& Identifier);
	void Remove_Option(const class FString& Option);
	void SetSelectedOption(const class FString& SelectedOption_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ComboBox_Leaderboard_C">();
	}
	static class UW_ComboBox_Leaderboard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ComboBox_Leaderboard_C>();
	}
};
static_assert(alignof(UW_ComboBox_Leaderboard_C) == 0x000008, "Wrong alignment on UW_ComboBox_Leaderboard_C");
static_assert(sizeof(UW_ComboBox_Leaderboard_C) == 0x000368, "Wrong size on UW_ComboBox_Leaderboard_C");
static_assert(offsetof(UW_ComboBox_Leaderboard_C, UberGraphFrame) == 0x0002C0, "Member 'UW_ComboBox_Leaderboard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ComboBox_Leaderboard_C, ComboBoxString_75) == 0x0002C8, "Member 'UW_ComboBox_Leaderboard_C::ComboBoxString_75' has a wrong offset!");
static_assert(offsetof(UW_ComboBox_Leaderboard_C, SelectedOption) == 0x0002D0, "Member 'UW_ComboBox_Leaderboard_C::SelectedOption' has a wrong offset!");
static_assert(offsetof(UW_ComboBox_Leaderboard_C, Choices) == 0x0002E0, "Member 'UW_ComboBox_Leaderboard_C::Choices' has a wrong offset!");
static_assert(offsetof(UW_ComboBox_Leaderboard_C, OnComboSettingChange) == 0x0002F0, "Member 'UW_ComboBox_Leaderboard_C::OnComboSettingChange' has a wrong offset!");
static_assert(offsetof(UW_ComboBox_Leaderboard_C, Font) == 0x000300, "Member 'UW_ComboBox_Leaderboard_C::Font' has a wrong offset!");
static_assert(offsetof(UW_ComboBox_Leaderboard_C, FontSize) == 0x000308, "Member 'UW_ComboBox_Leaderboard_C::FontSize' has a wrong offset!");
static_assert(offsetof(UW_ComboBox_Leaderboard_C, IDs_and_Names) == 0x000310, "Member 'UW_ComboBox_Leaderboard_C::IDs_and_Names' has a wrong offset!");
static_assert(offsetof(UW_ComboBox_Leaderboard_C, Parent) == 0x000360, "Member 'UW_ComboBox_Leaderboard_C::Parent' has a wrong offset!");

}

