#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGameLevelEditor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InGameLevelEditor_structs.hpp"


namespace SDK::Params
{

// Function InGameLevelEditor.IGLE_ActionBufferObject.GetFriendlyActionName
// 0x0010 (0x0010 - 0x0000)
struct IGLE_ActionBufferObject_GetFriendlyActionName final
{
public:
	class FString                                 OutName;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_ActionBufferObject_GetFriendlyActionName) == 0x000008, "Wrong alignment on IGLE_ActionBufferObject_GetFriendlyActionName");
static_assert(sizeof(IGLE_ActionBufferObject_GetFriendlyActionName) == 0x000010, "Wrong size on IGLE_ActionBufferObject_GetFriendlyActionName");
static_assert(offsetof(IGLE_ActionBufferObject_GetFriendlyActionName, OutName) == 0x000000, "Member 'IGLE_ActionBufferObject_GetFriendlyActionName::OutName' has a wrong offset!");

// Function InGameLevelEditor.IGLE_AsyncRegisterPlacables.AsyncRegisterPlacables
// 0x0028 (0x0028 - 0x0000)
struct IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ContentPaths;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          DeferDestruction;                                  // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_AsyncRegisterPlacables*           ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables) == 0x000008, "Wrong alignment on IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables");
static_assert(sizeof(IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables) == 0x000028, "Wrong size on IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables");
static_assert(offsetof(IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables, WorldContextObject) == 0x000000, "Member 'IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables::WorldContextObject' has a wrong offset!");
static_assert(offsetof(IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables, ContentPaths) == 0x000008, "Member 'IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables::ContentPaths' has a wrong offset!");
static_assert(offsetof(IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables, DeferDestruction) == 0x000018, "Member 'IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables::DeferDestruction' has a wrong offset!");
static_assert(offsetof(IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables, ReturnValue) == 0x000020, "Member 'IGLE_AsyncRegisterPlacables_AsyncRegisterPlacables::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_BytesToLevelSave
// 0x0040 (0x0040 - 0x0000)
struct IGLE_FL_IGLE_BytesToLevelSave final
{
public:
	TArray<uint8>                                 LevelSaveBytes;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FIGLELevelSave                         ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_BytesToLevelSave) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_BytesToLevelSave");
static_assert(sizeof(IGLE_FL_IGLE_BytesToLevelSave) == 0x000040, "Wrong size on IGLE_FL_IGLE_BytesToLevelSave");
static_assert(offsetof(IGLE_FL_IGLE_BytesToLevelSave, LevelSaveBytes) == 0x000000, "Member 'IGLE_FL_IGLE_BytesToLevelSave::LevelSaveBytes' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_BytesToLevelSave, ReturnValue) == 0x000010, "Member 'IGLE_FL_IGLE_BytesToLevelSave::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_BytesToTransform
// 0x0070 (0x0070 - 0x0000)
struct IGLE_FL_IGLE_BytesToTransform final
{
public:
	TArray<uint8>                                 Bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_BytesToTransform) == 0x000010, "Wrong alignment on IGLE_FL_IGLE_BytesToTransform");
static_assert(sizeof(IGLE_FL_IGLE_BytesToTransform) == 0x000070, "Wrong size on IGLE_FL_IGLE_BytesToTransform");
static_assert(offsetof(IGLE_FL_IGLE_BytesToTransform, Bytes) == 0x000000, "Member 'IGLE_FL_IGLE_BytesToTransform::Bytes' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_BytesToTransform, ReturnValue) == 0x000010, "Member 'IGLE_FL_IGLE_BytesToTransform::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_CallInitializeForActionBufferObject
// 0x0008 (0x0008 - 0x0000)
struct IGLE_FL_IGLE_CallInitializeForActionBufferObject final
{
public:
	class UIGLE_ActionBufferObject*               ActionBufferObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_CallInitializeForActionBufferObject) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_CallInitializeForActionBufferObject");
static_assert(sizeof(IGLE_FL_IGLE_CallInitializeForActionBufferObject) == 0x000008, "Wrong size on IGLE_FL_IGLE_CallInitializeForActionBufferObject");
static_assert(offsetof(IGLE_FL_IGLE_CallInitializeForActionBufferObject, ActionBufferObject) == 0x000000, "Member 'IGLE_FL_IGLE_CallInitializeForActionBufferObject::ActionBufferObject' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_CallRedoForActionBufferObject
// 0x0008 (0x0008 - 0x0000)
struct IGLE_FL_IGLE_CallRedoForActionBufferObject final
{
public:
	class UIGLE_ActionBufferObject*               ActionBufferObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_CallRedoForActionBufferObject) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_CallRedoForActionBufferObject");
static_assert(sizeof(IGLE_FL_IGLE_CallRedoForActionBufferObject) == 0x000008, "Wrong size on IGLE_FL_IGLE_CallRedoForActionBufferObject");
static_assert(offsetof(IGLE_FL_IGLE_CallRedoForActionBufferObject, ActionBufferObject) == 0x000000, "Member 'IGLE_FL_IGLE_CallRedoForActionBufferObject::ActionBufferObject' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_CallUndoForActionBufferObject
// 0x0008 (0x0008 - 0x0000)
struct IGLE_FL_IGLE_CallUndoForActionBufferObject final
{
public:
	class UIGLE_ActionBufferObject*               ActionBufferObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_CallUndoForActionBufferObject) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_CallUndoForActionBufferObject");
static_assert(sizeof(IGLE_FL_IGLE_CallUndoForActionBufferObject) == 0x000008, "Wrong size on IGLE_FL_IGLE_CallUndoForActionBufferObject");
static_assert(offsetof(IGLE_FL_IGLE_CallUndoForActionBufferObject, ActionBufferObject) == 0x000000, "Member 'IGLE_FL_IGLE_CallUndoForActionBufferObject::ActionBufferObject' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_ClassToString
// 0x0018 (0x0018 - 0x0000)
struct IGLE_FL_IGLE_ClassToString final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_ClassToString) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_ClassToString");
static_assert(sizeof(IGLE_FL_IGLE_ClassToString) == 0x000018, "Wrong size on IGLE_FL_IGLE_ClassToString");
static_assert(offsetof(IGLE_FL_IGLE_ClassToString, Class_0) == 0x000000, "Member 'IGLE_FL_IGLE_ClassToString::Class_0' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_ClassToString, ReturnValue) == 0x000008, "Member 'IGLE_FL_IGLE_ClassToString::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_CreateDir
// 0x0010 (0x0010 - 0x0000)
struct IGLE_FL_IGLE_CreateDir final
{
public:
	class FString                                 RelativeGameDirectory;                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_CreateDir) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_CreateDir");
static_assert(sizeof(IGLE_FL_IGLE_CreateDir) == 0x000010, "Wrong size on IGLE_FL_IGLE_CreateDir");
static_assert(offsetof(IGLE_FL_IGLE_CreateDir, RelativeGameDirectory) == 0x000000, "Member 'IGLE_FL_IGLE_CreateDir::RelativeGameDirectory' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_CreatePlacableSave
// 0x00F0 (0x00F0 - 0x0000)
struct IGLE_FL_IGLE_CreatePlacableSave final
{
public:
	class AActor*                                 PlacableActorTarget;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIGLEPlacableSave                      OutSave;                                           // 0x0010(0x00D0)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_CreatePlacableSave) == 0x000010, "Wrong alignment on IGLE_FL_IGLE_CreatePlacableSave");
static_assert(sizeof(IGLE_FL_IGLE_CreatePlacableSave) == 0x0000F0, "Wrong size on IGLE_FL_IGLE_CreatePlacableSave");
static_assert(offsetof(IGLE_FL_IGLE_CreatePlacableSave, PlacableActorTarget) == 0x000000, "Member 'IGLE_FL_IGLE_CreatePlacableSave::PlacableActorTarget' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_CreatePlacableSave, OutSave) == 0x000010, "Member 'IGLE_FL_IGLE_CreatePlacableSave::OutSave' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_CreatePlacableSave, ReturnValue) == 0x0000E0, "Member 'IGLE_FL_IGLE_CreatePlacableSave::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_DeltaRotator
// 0x0048 (0x0048 - 0x0000)
struct IGLE_FL_IGLE_DeltaRotator final
{
public:
	struct FRotator                               A;                                                 // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               B;                                                 // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               ReturnValue;                                       // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_DeltaRotator) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_DeltaRotator");
static_assert(sizeof(IGLE_FL_IGLE_DeltaRotator) == 0x000048, "Wrong size on IGLE_FL_IGLE_DeltaRotator");
static_assert(offsetof(IGLE_FL_IGLE_DeltaRotator, A) == 0x000000, "Member 'IGLE_FL_IGLE_DeltaRotator::A' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_DeltaRotator, B) == 0x000018, "Member 'IGLE_FL_IGLE_DeltaRotator::B' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_DeltaRotator, ReturnValue) == 0x000030, "Member 'IGLE_FL_IGLE_DeltaRotator::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_DeprojectScreenToWorld
// 0x0170 (0x0170 - 0x0000)
struct IGLE_FL_IGLE_DeprojectScreenToWorld final
{
public:
	struct FVector2D                              RelativeViewportPos;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox2D                                 Viewport;                                          // 0x0010(0x0028)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                ViewMatrix;                                        // 0x0040(0x0080)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ProjectionMatrix;                                  // 0x00C0(0x0080)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                WorldPosition;                                     // 0x0140(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldDirection;                                    // 0x0158(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_DeprojectScreenToWorld) == 0x000010, "Wrong alignment on IGLE_FL_IGLE_DeprojectScreenToWorld");
static_assert(sizeof(IGLE_FL_IGLE_DeprojectScreenToWorld) == 0x000170, "Wrong size on IGLE_FL_IGLE_DeprojectScreenToWorld");
static_assert(offsetof(IGLE_FL_IGLE_DeprojectScreenToWorld, RelativeViewportPos) == 0x000000, "Member 'IGLE_FL_IGLE_DeprojectScreenToWorld::RelativeViewportPos' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_DeprojectScreenToWorld, Viewport) == 0x000010, "Member 'IGLE_FL_IGLE_DeprojectScreenToWorld::Viewport' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_DeprojectScreenToWorld, ViewMatrix) == 0x000040, "Member 'IGLE_FL_IGLE_DeprojectScreenToWorld::ViewMatrix' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_DeprojectScreenToWorld, ProjectionMatrix) == 0x0000C0, "Member 'IGLE_FL_IGLE_DeprojectScreenToWorld::ProjectionMatrix' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_DeprojectScreenToWorld, WorldPosition) == 0x000140, "Member 'IGLE_FL_IGLE_DeprojectScreenToWorld::WorldPosition' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_DeprojectScreenToWorld, WorldDirection) == 0x000158, "Member 'IGLE_FL_IGLE_DeprojectScreenToWorld::WorldDirection' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_DeserializeObject
// 0x0018 (0x0018 - 0x0000)
struct IGLE_FL_IGLE_DeserializeObject final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_DeserializeObject) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_DeserializeObject");
static_assert(sizeof(IGLE_FL_IGLE_DeserializeObject) == 0x000018, "Wrong size on IGLE_FL_IGLE_DeserializeObject");
static_assert(offsetof(IGLE_FL_IGLE_DeserializeObject, Object) == 0x000000, "Member 'IGLE_FL_IGLE_DeserializeObject::Object' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_DeserializeObject, Bytes) == 0x000008, "Member 'IGLE_FL_IGLE_DeserializeObject::Bytes' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_GetActorReference
// 0x0028 (0x0028 - 0x0000)
struct IGLE_FL_IGLE_GetActorReference final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIGLEActorReference                    Reference;                                         // 0x0008(0x0018)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_GetActorReference) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_GetActorReference");
static_assert(sizeof(IGLE_FL_IGLE_GetActorReference) == 0x000028, "Wrong size on IGLE_FL_IGLE_GetActorReference");
static_assert(offsetof(IGLE_FL_IGLE_GetActorReference, WorldContextObject) == 0x000000, "Member 'IGLE_FL_IGLE_GetActorReference::WorldContextObject' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_GetActorReference, Reference) == 0x000008, "Member 'IGLE_FL_IGLE_GetActorReference::Reference' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_GetActorReference, ReturnValue) == 0x000020, "Member 'IGLE_FL_IGLE_GetActorReference::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_GetAllSubdirectories
// 0x0020 (0x0020 - 0x0000)
struct IGLE_FL_IGLE_GetAllSubdirectories final
{
public:
	class FString                                 RelativeGameDirectory;                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_GetAllSubdirectories) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_GetAllSubdirectories");
static_assert(sizeof(IGLE_FL_IGLE_GetAllSubdirectories) == 0x000020, "Wrong size on IGLE_FL_IGLE_GetAllSubdirectories");
static_assert(offsetof(IGLE_FL_IGLE_GetAllSubdirectories, RelativeGameDirectory) == 0x000000, "Member 'IGLE_FL_IGLE_GetAllSubdirectories::RelativeGameDirectory' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_GetAllSubdirectories, ReturnValue) == 0x000010, "Member 'IGLE_FL_IGLE_GetAllSubdirectories::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_GetConstrainedViewRectangle
// 0x0030 (0x0030 - 0x0000)
struct IGLE_FL_IGLE_GetConstrainedViewRectangle final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox2D                                 ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_GetConstrainedViewRectangle) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_GetConstrainedViewRectangle");
static_assert(sizeof(IGLE_FL_IGLE_GetConstrainedViewRectangle) == 0x000030, "Wrong size on IGLE_FL_IGLE_GetConstrainedViewRectangle");
static_assert(offsetof(IGLE_FL_IGLE_GetConstrainedViewRectangle, PlayerController) == 0x000000, "Member 'IGLE_FL_IGLE_GetConstrainedViewRectangle::PlayerController' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_GetConstrainedViewRectangle, ReturnValue) == 0x000008, "Member 'IGLE_FL_IGLE_GetConstrainedViewRectangle::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_GetFilesWithExtension
// 0x0030 (0x0030 - 0x0000)
struct IGLE_FL_IGLE_GetFilesWithExtension final
{
public:
	class FString                                 RelativeGameDirectory;                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Extension;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_GetFilesWithExtension) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_GetFilesWithExtension");
static_assert(sizeof(IGLE_FL_IGLE_GetFilesWithExtension) == 0x000030, "Wrong size on IGLE_FL_IGLE_GetFilesWithExtension");
static_assert(offsetof(IGLE_FL_IGLE_GetFilesWithExtension, RelativeGameDirectory) == 0x000000, "Member 'IGLE_FL_IGLE_GetFilesWithExtension::RelativeGameDirectory' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_GetFilesWithExtension, Extension) == 0x000010, "Member 'IGLE_FL_IGLE_GetFilesWithExtension::Extension' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_GetFilesWithExtension, ReturnValue) == 0x000020, "Member 'IGLE_FL_IGLE_GetFilesWithExtension::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_IsObjectTransactionalAndTransient
// 0x0010 (0x0010 - 0x0000)
struct IGLE_FL_IGLE_IsObjectTransactionalAndTransient final
{
public:
	const class UObject*                          Target;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_IsObjectTransactionalAndTransient) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_IsObjectTransactionalAndTransient");
static_assert(sizeof(IGLE_FL_IGLE_IsObjectTransactionalAndTransient) == 0x000010, "Wrong size on IGLE_FL_IGLE_IsObjectTransactionalAndTransient");
static_assert(offsetof(IGLE_FL_IGLE_IsObjectTransactionalAndTransient, Target) == 0x000000, "Member 'IGLE_FL_IGLE_IsObjectTransactionalAndTransient::Target' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_IsObjectTransactionalAndTransient, ReturnValue) == 0x000008, "Member 'IGLE_FL_IGLE_IsObjectTransactionalAndTransient::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_LevelSaveToBytes
// 0x0040 (0x0040 - 0x0000)
struct IGLE_FL_IGLE_LevelSaveToBytes final
{
public:
	struct FIGLELevelSave                         LevelSave;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_LevelSaveToBytes) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_LevelSaveToBytes");
static_assert(sizeof(IGLE_FL_IGLE_LevelSaveToBytes) == 0x000040, "Wrong size on IGLE_FL_IGLE_LevelSaveToBytes");
static_assert(offsetof(IGLE_FL_IGLE_LevelSaveToBytes, LevelSave) == 0x000000, "Member 'IGLE_FL_IGLE_LevelSaveToBytes::LevelSave' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_LevelSaveToBytes, ReturnValue) == 0x000030, "Member 'IGLE_FL_IGLE_LevelSaveToBytes::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_LoadPlacableSave
// 0x00F0 (0x00F0 - 0x0000)
struct IGLE_FL_IGLE_LoadPlacableSave final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIGLEPlacableSave                      SaveToLoad;                                        // 0x0010(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_LoadPlacableSave) == 0x000010, "Wrong alignment on IGLE_FL_IGLE_LoadPlacableSave");
static_assert(sizeof(IGLE_FL_IGLE_LoadPlacableSave) == 0x0000F0, "Wrong size on IGLE_FL_IGLE_LoadPlacableSave");
static_assert(offsetof(IGLE_FL_IGLE_LoadPlacableSave, WorldContextObject) == 0x000000, "Member 'IGLE_FL_IGLE_LoadPlacableSave::WorldContextObject' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_LoadPlacableSave, SaveToLoad) == 0x000010, "Member 'IGLE_FL_IGLE_LoadPlacableSave::SaveToLoad' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_LoadPlacableSave, ReturnValue) == 0x0000E0, "Member 'IGLE_FL_IGLE_LoadPlacableSave::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_MakeActorReference
// 0x0028 (0x0028 - 0x0000)
struct IGLE_FL_IGLE_MakeActorReference final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIGLEActorReference                    Reference;                                         // 0x0008(0x0018)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_MakeActorReference) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_MakeActorReference");
static_assert(sizeof(IGLE_FL_IGLE_MakeActorReference) == 0x000028, "Wrong size on IGLE_FL_IGLE_MakeActorReference");
static_assert(offsetof(IGLE_FL_IGLE_MakeActorReference, Actor) == 0x000000, "Member 'IGLE_FL_IGLE_MakeActorReference::Actor' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MakeActorReference, Reference) == 0x000008, "Member 'IGLE_FL_IGLE_MakeActorReference::Reference' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MakeActorReference, ReturnValue) == 0x000020, "Member 'IGLE_FL_IGLE_MakeActorReference::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_MakeCustomProjectionMatrix
// 0x00A0 (0x00A0 - 0x0000)
struct IGLE_FL_IGLE_MakeCustomProjectionMatrix final
{
public:
	struct FVector2D                              ViewportSize;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FOV;                                               // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NearPlane;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FarPlane;                                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InverseZMatrix;                                    // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NoFarPlane;                                        // 0x001D(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                ReturnValue;                                       // 0x0020(0x0080)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_MakeCustomProjectionMatrix) == 0x000010, "Wrong alignment on IGLE_FL_IGLE_MakeCustomProjectionMatrix");
static_assert(sizeof(IGLE_FL_IGLE_MakeCustomProjectionMatrix) == 0x0000A0, "Wrong size on IGLE_FL_IGLE_MakeCustomProjectionMatrix");
static_assert(offsetof(IGLE_FL_IGLE_MakeCustomProjectionMatrix, ViewportSize) == 0x000000, "Member 'IGLE_FL_IGLE_MakeCustomProjectionMatrix::ViewportSize' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MakeCustomProjectionMatrix, FOV) == 0x000010, "Member 'IGLE_FL_IGLE_MakeCustomProjectionMatrix::FOV' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MakeCustomProjectionMatrix, NearPlane) == 0x000014, "Member 'IGLE_FL_IGLE_MakeCustomProjectionMatrix::NearPlane' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MakeCustomProjectionMatrix, FarPlane) == 0x000018, "Member 'IGLE_FL_IGLE_MakeCustomProjectionMatrix::FarPlane' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MakeCustomProjectionMatrix, InverseZMatrix) == 0x00001C, "Member 'IGLE_FL_IGLE_MakeCustomProjectionMatrix::InverseZMatrix' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MakeCustomProjectionMatrix, NoFarPlane) == 0x00001D, "Member 'IGLE_FL_IGLE_MakeCustomProjectionMatrix::NoFarPlane' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MakeCustomProjectionMatrix, ReturnValue) == 0x000020, "Member 'IGLE_FL_IGLE_MakeCustomProjectionMatrix::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_MultiplyRotator
// 0x0048 (0x0048 - 0x0000)
struct IGLE_FL_IGLE_MultiplyRotator final
{
public:
	struct FRotator                               A;                                                 // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               B;                                                 // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               ReturnValue;                                       // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_MultiplyRotator) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_MultiplyRotator");
static_assert(sizeof(IGLE_FL_IGLE_MultiplyRotator) == 0x000048, "Wrong size on IGLE_FL_IGLE_MultiplyRotator");
static_assert(offsetof(IGLE_FL_IGLE_MultiplyRotator, A) == 0x000000, "Member 'IGLE_FL_IGLE_MultiplyRotator::A' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MultiplyRotator, B) == 0x000018, "Member 'IGLE_FL_IGLE_MultiplyRotator::B' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_MultiplyRotator, ReturnValue) == 0x000030, "Member 'IGLE_FL_IGLE_MultiplyRotator::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_ObjectTypeQueryToCollisionChannel
// 0x0002 (0x0002 - 0x0000)
struct IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel final
{
public:
	EObjectTypeQuery                              ObjectTypeQuery;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel) == 0x000001, "Wrong alignment on IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel");
static_assert(sizeof(IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel) == 0x000002, "Wrong size on IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel");
static_assert(offsetof(IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel, ObjectTypeQuery) == 0x000000, "Member 'IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel::ObjectTypeQuery' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel, ReturnValue) == 0x000001, "Member 'IGLE_FL_IGLE_ObjectTypeQueryToCollisionChannel::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_ProjectWorldToScreen
// 0x0150 (0x0150 - 0x0000)
struct IGLE_FL_IGLE_ProjectWorldToScreen final
{
public:
	struct FVector                                WorldPos;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox2D                                 Viewport;                                          // 0x0018(0x0028)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ViewMatrix;                                        // 0x0040(0x0080)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ProjectionMatrix;                                  // 0x00C0(0x0080)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              ResultingScreenPos;                                // 0x0140(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_ProjectWorldToScreen) == 0x000010, "Wrong alignment on IGLE_FL_IGLE_ProjectWorldToScreen");
static_assert(sizeof(IGLE_FL_IGLE_ProjectWorldToScreen) == 0x000150, "Wrong size on IGLE_FL_IGLE_ProjectWorldToScreen");
static_assert(offsetof(IGLE_FL_IGLE_ProjectWorldToScreen, WorldPos) == 0x000000, "Member 'IGLE_FL_IGLE_ProjectWorldToScreen::WorldPos' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_ProjectWorldToScreen, Viewport) == 0x000018, "Member 'IGLE_FL_IGLE_ProjectWorldToScreen::Viewport' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_ProjectWorldToScreen, ViewMatrix) == 0x000040, "Member 'IGLE_FL_IGLE_ProjectWorldToScreen::ViewMatrix' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_ProjectWorldToScreen, ProjectionMatrix) == 0x0000C0, "Member 'IGLE_FL_IGLE_ProjectWorldToScreen::ProjectionMatrix' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_ProjectWorldToScreen, ResultingScreenPos) == 0x000140, "Member 'IGLE_FL_IGLE_ProjectWorldToScreen::ResultingScreenPos' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_RandomInt64
// 0x0008 (0x0008 - 0x0000)
struct IGLE_FL_IGLE_RandomInt64 final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_RandomInt64) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_RandomInt64");
static_assert(sizeof(IGLE_FL_IGLE_RandomInt64) == 0x000008, "Wrong size on IGLE_FL_IGLE_RandomInt64");
static_assert(offsetof(IGLE_FL_IGLE_RandomInt64, ReturnValue) == 0x000000, "Member 'IGLE_FL_IGLE_RandomInt64::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_ReadBytesFromFile
// 0x0028 (0x0028 - 0x0000)
struct IGLE_FL_IGLE_ReadBytesFromFile final
{
public:
	class FString                                 AbsoluteLevelDirectory;                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_ReadBytesFromFile) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_ReadBytesFromFile");
static_assert(sizeof(IGLE_FL_IGLE_ReadBytesFromFile) == 0x000028, "Wrong size on IGLE_FL_IGLE_ReadBytesFromFile");
static_assert(offsetof(IGLE_FL_IGLE_ReadBytesFromFile, AbsoluteLevelDirectory) == 0x000000, "Member 'IGLE_FL_IGLE_ReadBytesFromFile::AbsoluteLevelDirectory' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_ReadBytesFromFile, Bytes) == 0x000010, "Member 'IGLE_FL_IGLE_ReadBytesFromFile::Bytes' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_ReadBytesFromFile, ReturnValue) == 0x000020, "Member 'IGLE_FL_IGLE_ReadBytesFromFile::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_SerializeObject
// 0x0018 (0x0018 - 0x0000)
struct IGLE_FL_IGLE_SerializeObject final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_SerializeObject) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_SerializeObject");
static_assert(sizeof(IGLE_FL_IGLE_SerializeObject) == 0x000018, "Wrong size on IGLE_FL_IGLE_SerializeObject");
static_assert(offsetof(IGLE_FL_IGLE_SerializeObject, Object) == 0x000000, "Member 'IGLE_FL_IGLE_SerializeObject::Object' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SerializeObject, ReturnValue) == 0x000008, "Member 'IGLE_FL_IGLE_SerializeObject::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_SetCullingEnabledForActor
// 0x0010 (0x0010 - 0x0000)
struct IGLE_FL_IGLE_SetCullingEnabledForActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableCulling;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_SetCullingEnabledForActor) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_SetCullingEnabledForActor");
static_assert(sizeof(IGLE_FL_IGLE_SetCullingEnabledForActor) == 0x000010, "Wrong size on IGLE_FL_IGLE_SetCullingEnabledForActor");
static_assert(offsetof(IGLE_FL_IGLE_SetCullingEnabledForActor, Actor) == 0x000000, "Member 'IGLE_FL_IGLE_SetCullingEnabledForActor::Actor' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SetCullingEnabledForActor, EnableCulling) == 0x000008, "Member 'IGLE_FL_IGLE_SetCullingEnabledForActor::EnableCulling' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_SetRenderViewport
// 0x0001 (0x0001 - 0x0000)
struct IGLE_FL_IGLE_SetRenderViewport final
{
public:
	bool                                          ShouldRender;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_SetRenderViewport) == 0x000001, "Wrong alignment on IGLE_FL_IGLE_SetRenderViewport");
static_assert(sizeof(IGLE_FL_IGLE_SetRenderViewport) == 0x000001, "Wrong size on IGLE_FL_IGLE_SetRenderViewport");
static_assert(offsetof(IGLE_FL_IGLE_SetRenderViewport, ShouldRender) == 0x000000, "Member 'IGLE_FL_IGLE_SetRenderViewport::ShouldRender' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_Slerp
// 0x0070 (0x0070 - 0x0000)
struct IGLE_FL_IGLE_Slerp final
{
public:
	struct FQuat                                  A;                                                 // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  B;                                                 // 0x0020(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Alpha;                                             // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  ReturnValue;                                       // 0x0050(0x0020)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_Slerp) == 0x000010, "Wrong alignment on IGLE_FL_IGLE_Slerp");
static_assert(sizeof(IGLE_FL_IGLE_Slerp) == 0x000070, "Wrong size on IGLE_FL_IGLE_Slerp");
static_assert(offsetof(IGLE_FL_IGLE_Slerp, A) == 0x000000, "Member 'IGLE_FL_IGLE_Slerp::A' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_Slerp, B) == 0x000020, "Member 'IGLE_FL_IGLE_Slerp::B' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_Slerp, Alpha) == 0x000040, "Member 'IGLE_FL_IGLE_Slerp::Alpha' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_Slerp, ReturnValue) == 0x000050, "Member 'IGLE_FL_IGLE_Slerp::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_SortStringArrayBySimilarity
// 0x0038 (0x0038 - 0x0000)
struct IGLE_FL_IGLE_SortStringArrayBySimilarity final
{
public:
	class FString                                 base;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         InputArray;                                        // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FStringFloatPair>               OutputArray;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          IgnoreCase;                                        // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_SortStringArrayBySimilarity) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_SortStringArrayBySimilarity");
static_assert(sizeof(IGLE_FL_IGLE_SortStringArrayBySimilarity) == 0x000038, "Wrong size on IGLE_FL_IGLE_SortStringArrayBySimilarity");
static_assert(offsetof(IGLE_FL_IGLE_SortStringArrayBySimilarity, base) == 0x000000, "Member 'IGLE_FL_IGLE_SortStringArrayBySimilarity::base' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SortStringArrayBySimilarity, InputArray) == 0x000010, "Member 'IGLE_FL_IGLE_SortStringArrayBySimilarity::InputArray' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SortStringArrayBySimilarity, OutputArray) == 0x000020, "Member 'IGLE_FL_IGLE_SortStringArrayBySimilarity::OutputArray' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SortStringArrayBySimilarity, IgnoreCase) == 0x000030, "Member 'IGLE_FL_IGLE_SortStringArrayBySimilarity::IgnoreCase' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_StringToClass
// 0x0018 (0x0018 - 0x0000)
struct IGLE_FL_IGLE_StringToClass final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_StringToClass) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_StringToClass");
static_assert(sizeof(IGLE_FL_IGLE_StringToClass) == 0x000018, "Wrong size on IGLE_FL_IGLE_StringToClass");
static_assert(offsetof(IGLE_FL_IGLE_StringToClass, String) == 0x000000, "Member 'IGLE_FL_IGLE_StringToClass::String' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_StringToClass, ReturnValue) == 0x000010, "Member 'IGLE_FL_IGLE_StringToClass::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_StringToEnum
// 0x0040 (0x0040 - 0x0000)
struct IGLE_FL_IGLE_StringToEnum final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UUserDefinedEnum>        EnumClass;                                         // 0x0010(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_StringToEnum) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_StringToEnum");
static_assert(sizeof(IGLE_FL_IGLE_StringToEnum) == 0x000040, "Wrong size on IGLE_FL_IGLE_StringToEnum");
static_assert(offsetof(IGLE_FL_IGLE_StringToEnum, String) == 0x000000, "Member 'IGLE_FL_IGLE_StringToEnum::String' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_StringToEnum, EnumClass) == 0x000010, "Member 'IGLE_FL_IGLE_StringToEnum::EnumClass' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_StringToEnum, ReturnValue) == 0x000038, "Member 'IGLE_FL_IGLE_StringToEnum::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_SweepActorWithWorld
// 0x0060 (0x0060 - 0x0000)
struct IGLE_FL_IGLE_SweepActorWithWorld final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Start;                                             // 0x0010(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                End;                                               // 0x0028(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OverrideComponent;                                 // 0x0050(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_SweepActorWithWorld) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_SweepActorWithWorld");
static_assert(sizeof(IGLE_FL_IGLE_SweepActorWithWorld) == 0x000060, "Wrong size on IGLE_FL_IGLE_SweepActorWithWorld");
static_assert(offsetof(IGLE_FL_IGLE_SweepActorWithWorld, Target) == 0x000000, "Member 'IGLE_FL_IGLE_SweepActorWithWorld::Target' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SweepActorWithWorld, TraceChannel) == 0x000008, "Member 'IGLE_FL_IGLE_SweepActorWithWorld::TraceChannel' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SweepActorWithWorld, Start) == 0x000010, "Member 'IGLE_FL_IGLE_SweepActorWithWorld::Start' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SweepActorWithWorld, End) == 0x000028, "Member 'IGLE_FL_IGLE_SweepActorWithWorld::End' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SweepActorWithWorld, OutHits) == 0x000040, "Member 'IGLE_FL_IGLE_SweepActorWithWorld::OutHits' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SweepActorWithWorld, OverrideComponent) == 0x000050, "Member 'IGLE_FL_IGLE_SweepActorWithWorld::OverrideComponent' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_SweepActorWithWorld, ReturnValue) == 0x000058, "Member 'IGLE_FL_IGLE_SweepActorWithWorld::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_TraceConvex
// 0x00E0 (0x00E0 - 0x0000)
struct IGLE_FL_IGLE_TraceConvex final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        Verticies;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ShapeTransfom;                                     // 0x0020(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0080(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Start;                                             // 0x0088(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                End;                                               // 0x00A0(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x00B8(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FHitResult>                     OutHits;                                           // 0x00C8(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_FL_IGLE_TraceConvex) == 0x000010, "Wrong alignment on IGLE_FL_IGLE_TraceConvex");
static_assert(sizeof(IGLE_FL_IGLE_TraceConvex) == 0x0000E0, "Wrong size on IGLE_FL_IGLE_TraceConvex");
static_assert(offsetof(IGLE_FL_IGLE_TraceConvex, WorldContextObject) == 0x000000, "Member 'IGLE_FL_IGLE_TraceConvex::WorldContextObject' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TraceConvex, Verticies) == 0x000008, "Member 'IGLE_FL_IGLE_TraceConvex::Verticies' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TraceConvex, ShapeTransfom) == 0x000020, "Member 'IGLE_FL_IGLE_TraceConvex::ShapeTransfom' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TraceConvex, TraceChannel) == 0x000080, "Member 'IGLE_FL_IGLE_TraceConvex::TraceChannel' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TraceConvex, Start) == 0x000088, "Member 'IGLE_FL_IGLE_TraceConvex::Start' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TraceConvex, End) == 0x0000A0, "Member 'IGLE_FL_IGLE_TraceConvex::End' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TraceConvex, ActorsToIgnore) == 0x0000B8, "Member 'IGLE_FL_IGLE_TraceConvex::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TraceConvex, OutHits) == 0x0000C8, "Member 'IGLE_FL_IGLE_TraceConvex::OutHits' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TraceConvex, ReturnValue) == 0x0000D8, "Member 'IGLE_FL_IGLE_TraceConvex::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_TraceTypeQueryToCollisionChannel
// 0x0002 (0x0002 - 0x0000)
struct IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel final
{
public:
	ETraceTypeQuery                               TraceTypeQuery;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel) == 0x000001, "Wrong alignment on IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel");
static_assert(sizeof(IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel) == 0x000002, "Wrong size on IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel");
static_assert(offsetof(IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel, TraceTypeQuery) == 0x000000, "Member 'IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel::TraceTypeQuery' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel, ReturnValue) == 0x000001, "Member 'IGLE_FL_IGLE_TraceTypeQueryToCollisionChannel::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_TransformToBytes
// 0x0070 (0x0070 - 0x0000)
struct IGLE_FL_IGLE_TransformToBytes final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_TransformToBytes) == 0x000010, "Wrong alignment on IGLE_FL_IGLE_TransformToBytes");
static_assert(sizeof(IGLE_FL_IGLE_TransformToBytes) == 0x000070, "Wrong size on IGLE_FL_IGLE_TransformToBytes");
static_assert(offsetof(IGLE_FL_IGLE_TransformToBytes, Transform) == 0x000000, "Member 'IGLE_FL_IGLE_TransformToBytes::Transform' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_TransformToBytes, ReturnValue) == 0x000060, "Member 'IGLE_FL_IGLE_TransformToBytes::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_FL.IGLE_WriteBytesToFile
// 0x0020 (0x0020 - 0x0000)
struct IGLE_FL_IGLE_WriteBytesToFile final
{
public:
	class FString                                 RelativeGameDirectory;                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_FL_IGLE_WriteBytesToFile) == 0x000008, "Wrong alignment on IGLE_FL_IGLE_WriteBytesToFile");
static_assert(sizeof(IGLE_FL_IGLE_WriteBytesToFile) == 0x000020, "Wrong size on IGLE_FL_IGLE_WriteBytesToFile");
static_assert(offsetof(IGLE_FL_IGLE_WriteBytesToFile, RelativeGameDirectory) == 0x000000, "Member 'IGLE_FL_IGLE_WriteBytesToFile::RelativeGameDirectory' has a wrong offset!");
static_assert(offsetof(IGLE_FL_IGLE_WriteBytesToFile, Bytes) == 0x000010, "Member 'IGLE_FL_IGLE_WriteBytesToFile::Bytes' has a wrong offset!");

// Function InGameLevelEditor.IGLE_InterfaceComponent.CallOnPropertyValueChanged
// 0x0010 (0x0010 - 0x0000)
struct IGLE_InterfaceComponent_CallOnPropertyValueChanged final
{
public:
	class FString                                 PropertyName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_InterfaceComponent_CallOnPropertyValueChanged) == 0x000008, "Wrong alignment on IGLE_InterfaceComponent_CallOnPropertyValueChanged");
static_assert(sizeof(IGLE_InterfaceComponent_CallOnPropertyValueChanged) == 0x000010, "Wrong size on IGLE_InterfaceComponent_CallOnPropertyValueChanged");
static_assert(offsetof(IGLE_InterfaceComponent_CallOnPropertyValueChanged, PropertyName) == 0x000000, "Member 'IGLE_InterfaceComponent_CallOnPropertyValueChanged::PropertyName' has a wrong offset!");

// Function InGameLevelEditor.IGLE_InterfaceComponent.GetPropertyByName
// 0x0098 (0x0098 - 0x0000)
struct IGLE_InterfaceComponent_GetPropertyByName final
{
public:
	class FString                                 PropertyName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIGLEProperty                          Property;                                          // 0x0010(0x0080)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_InterfaceComponent_GetPropertyByName) == 0x000008, "Wrong alignment on IGLE_InterfaceComponent_GetPropertyByName");
static_assert(sizeof(IGLE_InterfaceComponent_GetPropertyByName) == 0x000098, "Wrong size on IGLE_InterfaceComponent_GetPropertyByName");
static_assert(offsetof(IGLE_InterfaceComponent_GetPropertyByName, PropertyName) == 0x000000, "Member 'IGLE_InterfaceComponent_GetPropertyByName::PropertyName' has a wrong offset!");
static_assert(offsetof(IGLE_InterfaceComponent_GetPropertyByName, Property) == 0x000010, "Member 'IGLE_InterfaceComponent_GetPropertyByName::Property' has a wrong offset!");
static_assert(offsetof(IGLE_InterfaceComponent_GetPropertyByName, ReturnValue) == 0x000090, "Member 'IGLE_InterfaceComponent_GetPropertyByName::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_InterfaceComponent.GetPropertyByValueObject
// 0x0090 (0x0090 - 0x0000)
struct IGLE_InterfaceComponent_GetPropertyByValueObject final
{
public:
	class UIGLE_PropertyValueObject*              PropertyValueObject;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIGLEProperty                          Property;                                          // 0x0008(0x0080)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_InterfaceComponent_GetPropertyByValueObject) == 0x000008, "Wrong alignment on IGLE_InterfaceComponent_GetPropertyByValueObject");
static_assert(sizeof(IGLE_InterfaceComponent_GetPropertyByValueObject) == 0x000090, "Wrong size on IGLE_InterfaceComponent_GetPropertyByValueObject");
static_assert(offsetof(IGLE_InterfaceComponent_GetPropertyByValueObject, PropertyValueObject) == 0x000000, "Member 'IGLE_InterfaceComponent_GetPropertyByValueObject::PropertyValueObject' has a wrong offset!");
static_assert(offsetof(IGLE_InterfaceComponent_GetPropertyByValueObject, Property) == 0x000008, "Member 'IGLE_InterfaceComponent_GetPropertyByValueObject::Property' has a wrong offset!");
static_assert(offsetof(IGLE_InterfaceComponent_GetPropertyByValueObject, ReturnValue) == 0x000088, "Member 'IGLE_InterfaceComponent_GetPropertyByValueObject::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_InterfaceComponent.GetPropertyValueByName
// 0x0020 (0x0020 - 0x0000)
struct IGLE_InterfaceComponent_GetPropertyValueByName final
{
public:
	class FString                                 PropertyName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UIGLE_PropertyValueObject*              Value;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_InterfaceComponent_GetPropertyValueByName) == 0x000008, "Wrong alignment on IGLE_InterfaceComponent_GetPropertyValueByName");
static_assert(sizeof(IGLE_InterfaceComponent_GetPropertyValueByName) == 0x000020, "Wrong size on IGLE_InterfaceComponent_GetPropertyValueByName");
static_assert(offsetof(IGLE_InterfaceComponent_GetPropertyValueByName, PropertyName) == 0x000000, "Member 'IGLE_InterfaceComponent_GetPropertyValueByName::PropertyName' has a wrong offset!");
static_assert(offsetof(IGLE_InterfaceComponent_GetPropertyValueByName, Value) == 0x000010, "Member 'IGLE_InterfaceComponent_GetPropertyValueByName::Value' has a wrong offset!");
static_assert(offsetof(IGLE_InterfaceComponent_GetPropertyValueByName, ReturnValue) == 0x000018, "Member 'IGLE_InterfaceComponent_GetPropertyValueByName::ReturnValue' has a wrong offset!");

// Function InGameLevelEditor.IGLE_InterfaceComponent.OnOwnerDestroyed
// 0x0008 (0x0008 - 0x0000)
struct IGLE_InterfaceComponent_OnOwnerDestroyed final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_InterfaceComponent_OnOwnerDestroyed) == 0x000008, "Wrong alignment on IGLE_InterfaceComponent_OnOwnerDestroyed");
static_assert(sizeof(IGLE_InterfaceComponent_OnOwnerDestroyed) == 0x000008, "Wrong size on IGLE_InterfaceComponent_OnOwnerDestroyed");
static_assert(offsetof(IGLE_InterfaceComponent_OnOwnerDestroyed, Owner) == 0x000000, "Member 'IGLE_InterfaceComponent_OnOwnerDestroyed::Owner' has a wrong offset!");

// Function InGameLevelEditor.IGLE_InterfaceComponent.SetRuntimeName
// 0x0010 (0x0010 - 0x0000)
struct IGLE_InterfaceComponent_SetRuntimeName final
{
public:
	class FString                                 NewRuntimeName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_InterfaceComponent_SetRuntimeName) == 0x000008, "Wrong alignment on IGLE_InterfaceComponent_SetRuntimeName");
static_assert(sizeof(IGLE_InterfaceComponent_SetRuntimeName) == 0x000010, "Wrong size on IGLE_InterfaceComponent_SetRuntimeName");
static_assert(offsetof(IGLE_InterfaceComponent_SetRuntimeName, NewRuntimeName) == 0x000000, "Member 'IGLE_InterfaceComponent_SetRuntimeName::NewRuntimeName' has a wrong offset!");

// Function InGameLevelEditor.IGLE_RuntimeSubsystem.RegisterPlacableActorInfo
// 0x00C0 (0x00C0 - 0x0000)
struct IGLE_RuntimeSubsystem_RegisterPlacableActorInfo final
{
public:
	struct FIGLEPlacableActorInfo                 Info;                                              // 0x0000(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfo) == 0x000008, "Wrong alignment on IGLE_RuntimeSubsystem_RegisterPlacableActorInfo");
static_assert(sizeof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfo) == 0x0000C0, "Wrong size on IGLE_RuntimeSubsystem_RegisterPlacableActorInfo");
static_assert(offsetof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfo, Info) == 0x000000, "Member 'IGLE_RuntimeSubsystem_RegisterPlacableActorInfo::Info' has a wrong offset!");

// Function InGameLevelEditor.IGLE_RuntimeSubsystem.RegisterPlacableActorInfoFromClasses
// 0x0028 (0x0028 - 0x0000)
struct IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses final
{
public:
	TArray<class FString>                         ContentPaths;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         TransientActors;                                   // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          DeferDestruction;                                  // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses) == 0x000008, "Wrong alignment on IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses");
static_assert(sizeof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses) == 0x000028, "Wrong size on IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses");
static_assert(offsetof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses, ContentPaths) == 0x000000, "Member 'IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses::ContentPaths' has a wrong offset!");
static_assert(offsetof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses, TransientActors) == 0x000010, "Member 'IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses::TransientActors' has a wrong offset!");
static_assert(offsetof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses, DeferDestruction) == 0x000020, "Member 'IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromClasses::DeferDestruction' has a wrong offset!");

// Function InGameLevelEditor.IGLE_RuntimeSubsystem.RegisterPlacableActorInfoFromDataTable
// 0x0008 (0x0008 - 0x0000)
struct IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromDataTable final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromDataTable) == 0x000008, "Wrong alignment on IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromDataTable");
static_assert(sizeof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromDataTable) == 0x000008, "Wrong size on IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromDataTable");
static_assert(offsetof(IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromDataTable, DataTable) == 0x000000, "Member 'IGLE_RuntimeSubsystem_RegisterPlacableActorInfoFromDataTable::DataTable' has a wrong offset!");

}

