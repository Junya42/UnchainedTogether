#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ComboBox_Leaderboard

#include "Basic.hpp"

#include "W_ComboBox_Leaderboard_classes.hpp"
#include "W_ComboBox_Leaderboard_parameters.hpp"


namespace SDK
{

// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.AddOneOption
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::AddOneOption(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "AddOneOption");

	Params::W_ComboBox_Leaderboard_C_AddOneOption Parms{};

	Parms.Name_0 = std::move(Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.AddOptionsOnce
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_ComboBox_Leaderboard_C::AddOptionsOnce(TArray<class FString>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "AddOptionsOnce");

	Params::W_ComboBox_Leaderboard_C_AddOptionsOnce Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.AssignPressEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ComboChoice_Leaderboard_C*     ComboChoice                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::AssignPressEvent(class UW_ComboChoice_Leaderboard_C* ComboChoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "AssignPressEvent");

	Params::W_ComboBox_Leaderboard_C_AssignPressEvent Parms{};

	Parms.ComboChoice = ComboChoice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.ClearOptions
// (BlueprintCallable, BlueprintEvent)

void UW_ComboBox_Leaderboard_C::ClearOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "ClearOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ComboBox_Leaderboard_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.CropMicrophoneName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           SourceString                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UW_ComboBox_Leaderboard_C::CropMicrophoneName(const class FString& SourceString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "CropMicrophoneName");

	Params::W_ComboBox_Leaderboard_C_CropMicrophoneName Parms{};

	Parms.SourceString = std::move(SourceString);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::CustomEvent(const class FString& Item, const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "CustomEvent");

	Params::W_ComboBox_Leaderboard_C_CustomEvent Parms{};

	Parms.Item = std::move(Item);
	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.ExecuteUbergraph_W_ComboBox_Leaderboard
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::ExecuteUbergraph_W_ComboBox_Leaderboard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "ExecuteUbergraph_W_ComboBox_Leaderboard");

	Params::W_ComboBox_Leaderboard_C_ExecuteUbergraph_W_ComboBox_Leaderboard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.GetSelectedOption
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UW_ComboBox_Leaderboard_C::GetSelectedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "GetSelectedOption");

	Params::W_ComboBox_Leaderboard_C_GetSelectedOption Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.HasOption
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    TURR                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::HasOption(const class FString& Option, bool* TURR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "HasOption");

	Params::W_ComboBox_Leaderboard_C_HasOption Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);

	if (TURR != nullptr)
		*TURR = Parms.TURR;
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.InitColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_ComboBox_Leaderboard_C::InitColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "InitColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.LoadDebugSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::LoadDebugSetting(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "LoadDebugSetting");

	Params::W_ComboBox_Leaderboard_C_LoadDebugSetting Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.LoadPushToTalkSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UsePTT                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::LoadPushToTalkSetting(bool UsePTT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "LoadPushToTalkSetting");

	Params::W_ComboBox_Leaderboard_C_LoadPushToTalkSetting Parms{};

	Parms.UsePTT = UsePTT;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.OnComboSettingChange__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewSelection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESelectInfo                             SelectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::OnComboSettingChange__DelegateSignature(const class FString& NewSelection, ESelectInfo SelectType, const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "OnComboSettingChange__DelegateSignature");

	Params::W_ComboBox_Leaderboard_C_OnComboSettingChange__DelegateSignature Parms{};

	Parms.NewSelection = std::move(NewSelection);
	Parms.SelectType = SelectType;
	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.OnGenerateWidget_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_ComboBox_Leaderboard_C::OnGenerateWidget_0(const class FString& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "OnGenerateWidget_0");

	Params::W_ComboBox_Leaderboard_C_OnGenerateWidget_0 Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.Refresh Audio Devices
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::Refresh_Audio_Devices(TArray<class FString>& Array, const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "Refresh Audio Devices");

	Params::W_ComboBox_Leaderboard_C_Refresh_Audio_Devices Parms{};

	Parms.Array = std::move(Array);
	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.RefreshComboBoxContent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_ComboBoxContent               Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           Identifier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::RefreshComboBoxContent(const struct FS_ComboBoxContent& Params_0, const class FString& Identifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "RefreshComboBoxContent");

	Params::W_ComboBox_Leaderboard_C_RefreshComboBoxContent Parms{};

	Parms.Params_0 = std::move(Params_0);
	Parms.Identifier = std::move(Identifier);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.Remove_Option
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::Remove_Option(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "Remove_Option");

	Params::W_ComboBox_Leaderboard_C_Remove_Option Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboBox_Leaderboard.W_ComboBox_Leaderboard_C.SetSelectedOption
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SelectedOption_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ComboBox_Leaderboard_C::SetSelectedOption(const class FString& SelectedOption_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboBox_Leaderboard_C", "SetSelectedOption");

	Params::W_ComboBox_Leaderboard_C_SetSelectedOption Parms{};

	Parms.SelectedOption_0 = std::move(SelectedOption_0);

	UObject::ProcessEvent(Func, &Parms);
}

}

