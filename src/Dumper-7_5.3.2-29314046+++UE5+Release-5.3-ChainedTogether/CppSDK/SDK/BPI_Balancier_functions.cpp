#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Balancier

#include "Basic.hpp"

#include "BPI_Balancier_classes.hpp"
#include "BPI_Balancier_parameters.hpp"


namespace SDK
{

// Function BPI_Balancier.BPI_Balancier_C.AttachMaillonToHands
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Socket                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Maillon                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_Balancier_C::AttachMaillonToHands(class USceneComponent* Socket, class UPrimitiveComponent* Maillon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Balancier_C", "AttachMaillonToHands");

	Params::BPI_Balancier_C_AttachMaillonToHands Parms{};

	Parms.Socket = Socket;
	Parms.Maillon = Maillon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Balancier.BPI_Balancier_C.DetachMaillons
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Balancier_C::DetachMaillons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Balancier_C", "DetachMaillons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_Balancier.BPI_Balancier_C.GetMaillonByIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Maillon                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_Balancier_C::GetMaillonByIndex(int32 Index_0, class UPrimitiveComponent** Maillon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Balancier_C", "GetMaillonByIndex");

	Params::BPI_Balancier_C_GetMaillonByIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Maillon != nullptr)
		*Maillon = Parms.Maillon;
}


// Function BPI_Balancier.BPI_Balancier_C.GetMaillonIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Maillon                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Balancier_C::GetMaillonIndex(class UPrimitiveComponent* Maillon, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Balancier_C", "GetMaillonIndex");

	Params::BPI_Balancier_C_GetMaillonIndex Parms{};

	Parms.Maillon = Maillon;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BPI_Balancier.BPI_Balancier_C.GetRoot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Root                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_Balancier_C::GetRoot(class UPrimitiveComponent** Root)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Balancier_C", "GetRoot");

	Params::BPI_Balancier_C_GetRoot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Root != nullptr)
		*Root = Parms.Root;
}


// Function BPI_Balancier.BPI_Balancier_C.IsOccupied
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Occupied                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Balancier_C::IsOccupied(bool* Occupied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Balancier_C", "IsOccupied");

	Params::BPI_Balancier_C_IsOccupied Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Occupied != nullptr)
		*Occupied = Parms.Occupied;
}


// Function BPI_Balancier.BPI_Balancier_C.SetOccupied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Occupied                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Balancier_C::SetOccupied(bool Occupied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Balancier_C", "SetOccupied");

	Params::BPI_Balancier_C_SetOccupied Parms{};

	Parms.Occupied = Occupied;

	UObject::ProcessEvent(Func, &Parms);
}

}

