#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ComboChoice_Leaderboard

#include "Basic.hpp"

#include "W_ComboChoice_Leaderboard_classes.hpp"
#include "W_ComboChoice_Leaderboard_parameters.hpp"


namespace SDK
{

// Function W_ComboChoice_Leaderboard.W_ComboChoice_Leaderboard_C.ExecuteUbergraph_W_ComboChoice_Leaderboard
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ComboChoice_Leaderboard_C::ExecuteUbergraph_W_ComboChoice_Leaderboard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboChoice_Leaderboard_C", "ExecuteUbergraph_W_ComboChoice_Leaderboard");

	Params::W_ComboChoice_Leaderboard_C_ExecuteUbergraph_W_ComboChoice_Leaderboard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboChoice_Leaderboard.W_ComboChoice_Leaderboard_C.GetToolTipWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_ComboChoice_Leaderboard_C::GetToolTipWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboChoice_Leaderboard_C", "GetToolTipWidget");

	Params::W_ComboChoice_Leaderboard_C_GetToolTipWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ComboChoice_Leaderboard.W_ComboChoice_Leaderboard_C.InitColors
// (Public, BlueprintCallable, BlueprintEvent)

void UW_ComboChoice_Leaderboard_C::InitColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboChoice_Leaderboard_C", "InitColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ComboChoice_Leaderboard.W_ComboChoice_Leaderboard_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_ComboChoice_Leaderboard_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboChoice_Leaderboard_C", "OnMouseButtonDown");

	Params::W_ComboChoice_Leaderboard_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ComboChoice_Leaderboard.W_ComboChoice_Leaderboard_C.OnMouseButtonDown_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_ComboChoice_Leaderboard_C::OnMouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboChoice_Leaderboard_C", "OnMouseButtonDown_0");

	Params::W_ComboChoice_Leaderboard_C_OnMouseButtonDown_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ComboChoice_Leaderboard.W_ComboChoice_Leaderboard_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ComboChoice_Leaderboard_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboChoice_Leaderboard_C", "PreConstruct");

	Params::W_ComboChoice_Leaderboard_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ComboChoice_Leaderboard.W_ComboChoice_Leaderboard_C.Press__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Item_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ID_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ComboChoice_Leaderboard_C::Press__DelegateSignature(const class FString& Item_0, const class FString& ID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ComboChoice_Leaderboard_C", "Press__DelegateSignature");

	Params::W_ComboChoice_Leaderboard_C_Press__DelegateSignature Parms{};

	Parms.Item_0 = std::move(Item_0);
	Parms.ID_0 = std::move(ID_0);

	UObject::ProcessEvent(Func, &Parms);
}

}

