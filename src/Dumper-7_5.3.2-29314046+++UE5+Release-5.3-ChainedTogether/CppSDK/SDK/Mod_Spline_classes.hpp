#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mod_Spline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mod_Spline.Mod_Spline_C
// 0x00A8 (0x0340 - 0x0298)
class AMod_Spline_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       Spline;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    billboard;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere1;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UIGLE_InterfaceComponent*               IGLE_Interface;                                    // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar;                                            // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIGLE_SplinePointPropertyValueObject_C* PropertyObject;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSplineDrawn;                                     // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         SectionLength;                                     // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MeshSectionLength;                                 // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SplineMesh;                                        // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Forward_Axis;                                      // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideMesh;                                          // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             SplineMeshRef;                                     // 0x0310(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          CastShadows;                                       // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Mod_Spline_IGLE_Interface_K2Node_ComponentBoundEvent_0_IGLE_OnPropertyValueChanged__DelegateSignature(const class FString& PropertyName);
	void ClearAllPoints();
	void ClearAllSplineMeshes();
	void DrawDebugSpline();
	void DrawMeshAfterDelay();
	void DrawSpline(double Delay);
	void DrawSplineMesh(class UStaticMesh* NewMesh, ESplineMeshAxis InForwardAxis);
	void ExecuteUbergraph_Mod_Spline(int32 EntryPoint);
	void OnLoaded_DAB58A61475E7BF6B0E7428CFA530C85(class UObject* Loaded);
	void OnPointRemove(int32 Index_0);
	void OnSplineDrawn__DelegateSignature();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void UpdateLinearity(bool Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mod_Spline_C">();
	}
	static class AMod_Spline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMod_Spline_C>();
	}
};
static_assert(alignof(AMod_Spline_C) == 0x000008, "Wrong alignment on AMod_Spline_C");
static_assert(sizeof(AMod_Spline_C) == 0x000340, "Wrong size on AMod_Spline_C");
static_assert(offsetof(AMod_Spline_C, UberGraphFrame) == 0x000298, "Member 'AMod_Spline_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, Spline) == 0x0002A0, "Member 'AMod_Spline_C::Spline' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, Scene) == 0x0002A8, "Member 'AMod_Spline_C::Scene' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, billboard) == 0x0002B0, "Member 'AMod_Spline_C::billboard' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, Sphere1) == 0x0002B8, "Member 'AMod_Spline_C::Sphere1' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, IGLE_Interface) == 0x0002C0, "Member 'AMod_Spline_C::IGLE_Interface' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, DefaultSceneRoot) == 0x0002C8, "Member 'AMod_Spline_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, NewVar) == 0x0002D0, "Member 'AMod_Spline_C::NewVar' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, PropertyObject) == 0x0002D8, "Member 'AMod_Spline_C::PropertyObject' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, OnSplineDrawn) == 0x0002E0, "Member 'AMod_Spline_C::OnSplineDrawn' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, SectionLength) == 0x0002F0, "Member 'AMod_Spline_C::SectionLength' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, MeshSectionLength) == 0x0002F8, "Member 'AMod_Spline_C::MeshSectionLength' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, SplineMesh) == 0x000300, "Member 'AMod_Spline_C::SplineMesh' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, Forward_Axis) == 0x000308, "Member 'AMod_Spline_C::Forward_Axis' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, HideMesh) == 0x000309, "Member 'AMod_Spline_C::HideMesh' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, SplineMeshRef) == 0x000310, "Member 'AMod_Spline_C::SplineMeshRef' has a wrong offset!");
static_assert(offsetof(AMod_Spline_C, CastShadows) == 0x000338, "Member 'AMod_Spline_C::CastShadows' has a wrong offset!");

}

